{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/error-page/error/error.component.ts","./src/app/components/error-page/error/error.component.html","./src/app/components/home/home-trailer/home-trailer.component.ts","./src/app/components/home/home-trailer/home-trailer.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/log-out/log-out.component.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/management/movie/movie-edit-dialog/movie-edit-dialog.component.ts","./src/app/components/management/movie/movie-edit-dialog/movie-edit-dialog.component.html","./src/app/components/management/movie/movie-edit/movie-edit.component.ts","./src/app/components/management/movie/movie-edit/movie-edit.component.html","./src/app/components/management/movie/movie-entry/movie-entry.component.ts","./src/app/components/management/movie/movie-entry/movie-entry.component.html","./src/app/components/management/movie/movie.component.ts","./src/app/components/management/movie/movie.component.html","./src/app/components/management/multiplex/multiplex-entry/multiplex-entry.component.ts","./src/app/components/management/multiplex/multiplex-entry/multiplex-entry.component.html","./src/app/components/management/multiplex/multiplex.component.ts","./src/app/components/management/multiplex/multiplex.component.html","./src/app/components/management/multiplex/screen/allocat-movie/allocat-movie.component.ts","./src/app/components/management/multiplex/screen/allocat-movie/allocat-movie.component.html","./src/app/components/management/multiplex/screen/screen.component.ts","./src/app/components/management/multiplex/screen/screen.component.html","./src/app/components/management/user/user-admin-dialog/user-admin-dialog.component.ts","./src/app/components/management/user/user-admin-dialog/user-admin-dialog.component.html","./src/app/components/management/user/user.component.ts","./src/app/components/management/user/user.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/register/PickDateAdapter.ts","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/user-edit/user-edit.component.ts","./src/app/components/user-edit/user-edit.component.html","./src/app/components/utility-components/dialogs/confirm-message-dialog/confirm-message-dialog.component.ts","./src/app/components/utility-components/dialogs/confirm-message-dialog/confirm-message-dialog.component.html","./src/app/components/utility-components/dialogs/message-dialog/message-dialog.component.ts","./src/app/components/utility-components/dialogs/message-dialog/message-dialog.component.html","./src/app/file-upload/file-upload/file-upload.component.ts","./src/app/file-upload/file-upload/file-upload.component.html","./src/app/file-upload/file-upload/toFormData.ts","./src/app/file-upload/file-upload/toResponseBody.ts","./src/app/file-upload/file-upload/uploadProgress.ts","./src/app/models/HomeDataModel.ts","./src/app/models/LoginModel.ts","./src/app/models/MovieModel.ts","./src/app/models/MultiplexModel.ts","./src/app/models/ScreenModel.ts","./src/app/models/UserModel.ts","./src/app/pipes/url-safe/safe.pipe.ts","./src/app/services/http-services/allocate-movie-dialog/allocate-movie-dialog.service.ts","./src/app/services/http-services/home-trailer-service/home-trailer.service.ts","./src/app/services/http-services/login-service/login.service.ts","./src/app/services/http-services/movie-edit-dialog-service/movie-edit-dialog.service.ts","./src/app/services/http-services/movie-service/movie.service.ts","./src/app/services/http-services/multiplex-service/multiplex.service.ts","./src/app/services/http-services/register-service/register.service.ts","./src/app/services/http-services/user-admin-dialog/user-admin-dialog.service.ts","./src/app/services/http-services/user-service/user-edit.service.ts","./src/app/services/http-services/user-service/user.service.ts","./src/app/services/utilty-services/confirm-message-dialog/confirm-message-dialog.service.ts","./src/app/services/utilty-services/dialog/message-dialog.service.ts","./src/app/services/utilty-services/security/AuthInterceptor.ts","./src/app/services/utilty-services/security/auth-guards/login-auth-gard/login-check-auth-gurad.service.ts","./src/app/services/utilty-services/security/authentication.service.ts","./src/app/services/utilty-services/server-ping/ping.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { UserComponent } from './components/management/user/user.component';\nimport { MultiplexComponent } from './components/management/multiplex/multiplex.component';\nimport { MovieComponent } from './components/management/movie/movie.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { ErrorComponent } from './components/error-page/error/error.component';\nimport { LogOutComponent } from './components/log-out/log-out.component';\nimport { LoginCheckAuthGuradService } from './services/utilty-services/security/auth-guards/login-auth-gard/login-check-auth-gurad.service';\n\n\nconst routes: Routes = [\n  {path:\"home\", component:HomeComponent},\n  {path:\"login\", component:LoginComponent},\n  {path:\"logout\", component: LogOutComponent, canActivate: [LoginCheckAuthGuradService]},\n  {path:\"register\", component:RegisterComponent},\n  {path:\"user\", component:UserComponent},\n  {path:\"multiplex\", component:MultiplexComponent},\n  {path:\"movie\", component:MovieComponent},\n  {path:\"profile\", component:ProfileComponent},\n  { path: '',   redirectTo: '/home', pathMatch: 'full' }, //To set auto route\n  {path:\"**\", component:ErrorComponent},\n]; \n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthenticationService } from './services/utilty-services/security/authentication.service';\nimport { PingService } from './services/utilty-services/server-ping/ping.service';\nimport { Observable} from 'rxjs'; \nimport { interval } from 'rxjs';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent{\n  \n  title = 'movieplex';\n\n  pingValue: any;\n\n  constructor(public authService: AuthenticationService, public pingService: PingService){\n    /*const secondsCounter = interval(900000); //every 15 minutes\n    // Subscribe to begin publishing values\n    secondsCounter.subscribe(\n      (n) =>\n        {\n          this.pingService.getUserUp().subscribe();\n          this.pingService.getMPlexUp().subscribe();\n          this.pingService.getScreenUp().subscribe();\n          this.pingService.getMovieUp().subscribe();\n\n          console.log(`It's been ${n} seconds since subscribing!`);\n        }\n      );*/\n  }\n   \n  menuFunction() {\n    var x = document.getElementById(\"myTopnav\");\n    if (x.className === \"topnav\") {\n      x.className += \" responsive\";\n    } else {\n      x.className = \"topnav\";\n    }\n  }\n}\n","\n<div class=\"topnav\" id=\"myTopnav\">\n\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"icon-button with a menu\">\n    <mat-icon>more_vert</mat-icon>\n  </button>\n  <mat-menu #menu=\"matMenu\" class=\"sidemenu\"> \n    <span *ngIf=\"authService.isUserLoggedIn()\">\n      <button mat-menu-item routerLink=\"profile\" routerLinkActive=\"active\">\n        <mat-icon color=\"accent\">account_box</mat-icon>\n        <span>Profile</span>\n      </button>\n    </span>\n    <button mat-menu-item routerLink=\"home\" routerLinkActive=\"active\">\n      <mat-icon color=\"accent\">home</mat-icon>\n      <span>Home</span>\n    </button>\n    <button mat-menu-item disabled>\n      <mat-icon color=\"accent\">message</mat-icon>\n      <span>Message</span>\n    </button>\n    <button mat-menu-item disabled>\n      <mat-icon color=\"accent\">notifications</mat-icon>\n      <span>Notification</span>\n    </button> \n    <span *ngIf=\"authService.isUserLoggedIn()\">\n      <button mat-menu-item [matMenuTriggerFor]=\"management\">\n        <mat-icon color=\"accent\">settings</mat-icon>\n        <span>Management</span>\n      </button>\n    </span>\n\n      <mat-menu #management=\"matMenu\"> \n        <button mat-menu-item *ngIf=\"authService.isUserLoggedIn() && (authService.isUserSuperUser() || authService.isUserAdmin())\" routerLink=\"movie\" routerLinkActive=\"active\">\n          <mat-icon color=\"accent\">movie</mat-icon>\n          <span>Movie</span>\n        </button>\n        <button mat-menu-item *ngIf=\"authService.isUserLoggedIn() && (authService.isUserSuperUser() || authService.isUserAdmin())\" routerLink=\"multiplex\" routerLinkActive=\"active\">\n          <mat-icon color=\"accent\">theaters</mat-icon>\n          <span>Multiplex</span>\n        </button>\n        <span *ngIf=\"authService.isUserLoggedIn() && authService.isUserSuperUser()\">\n          <button mat-menu-item routerLink=\"user\" routerLinkActive=\"active\">\n            <mat-icon color=\"accent\">people</mat-icon>\n            <span>User</span>\n          </button>\n        </span>\n      </mat-menu>\n    <span *ngIf=\"authService.isUserLoggedIn()\">\n      <button mat-menu-item routerLink=\"logout\" routerLinkActive=\"active\">\n        <mat-icon color=\"accent\">logout</mat-icon>\n        <span>Logout</span>\n      </button>\n    </span>\n  </mat-menu>\n  \n  <button mat-button routerLink=\"home\" routerLinkActive=\"active\">\n    <mat-icon color=\"accent\">home</mat-icon> \n    <span>Home</span>\n  </button>\n  <span *ngIf=\"!authService.isUserLoggedIn()\">\n    <button mat-button routerLink=\"login\" routerLinkActive=\"active\">\n      <mat-icon color=\"accent\">login</mat-icon>\n      <span>Login</span>\n    </button>\n  </span>\n  <button mat-button routerLink=\"register\" routerLinkActive=\"active\">\n    <mat-icon color=\"accent\">person_add</mat-icon>\n    <span>Register</span>\n  </button>\n  <button mat-button routerLink=\"writepost\" routerLinkActive=\"active\" style=\"display: none;\">\n    <mat-icon color=\"accent\">mode_edit</mat-icon>\n    <span>Post</span>\n  </button>\n  <mat-form-field appearance=\"outline\" class=\"full-width\" color=\"accent\" style=\"position: absolute; right: 25px; top: 1px; color: rgb(118, 118, 118); display: none;\">\n    <mat-label color=\"accent\">Search ...</mat-label>\n    <mat-icon matPrefix color=\"accent\">search&nbsp;</mat-icon>\n    <input type=\"search\" matInput placeholder=\"\">\n  </mat-form-field> \n\n  <span>\n    <mat-label class=\"lbl\"> \n      <mat-icon matSuffix color=\"accent\">grain</mat-icon>\n      MoviePlex!\n    </mat-label>\n  </span>\n  <a href=\"javascript:void(0);\" class=\"icon\" (click)=\"menuFunction()\">\n    <i class=\"fa fa-bars\"></i>\n  </a>\n</div>\n\n<div class=\"content-area\"> \n  <h1 style=\"display: none;\">Jai Ram G ki</h1>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion'; \nimport {MatDatepickerModule} from '@angular/material/datepicker'; \nimport {MatFormFieldModule} from '@angular/material/form-field';  \nimport {MatCardModule} from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport {MatTableModule} from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { MatSelectModule  } from '@angular/material/select';\nimport {MatTabsModule} from '@angular/material/tabs'; \nimport {MatBadgeModule} from '@angular/material/badge';  \nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core'; \nimport {MatRadioModule} from '@angular/material/radio';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { UserComponent } from './components/management/user/user.component';\nimport { MovieComponent } from './components/management/movie/movie.component';\nimport { MultiplexComponent } from './components/management/multiplex/multiplex.component';\nimport {MAT_FORM_FIELD_DEFAULT_OPTIONS} from '@angular/material/form-field';\nimport { MessageDialogComponent } from './components/utility-components/dialogs/message-dialog/message-dialog.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { UserEditComponent } from './components/user-edit/user-edit.component';\nimport { MovieEntryComponent } from './components/management/movie/movie-entry/movie-entry.component';\nimport { MovieEditComponent } from './components/management/movie/movie-edit/movie-edit.component';\nimport { MovieEditDialogComponent } from './components/management/movie/movie-edit-dialog/movie-edit-dialog.component';\nimport { FileUploadComponent } from './file-upload/file-upload/file-upload.component';\nimport { MultiplexEntryComponent } from './components/management/multiplex/multiplex-entry/multiplex-entry.component';\nimport { ScreenComponent } from './components/management/multiplex/screen/screen.component';\nimport { AllocatMovieComponent } from './components/management/multiplex/screen/allocat-movie/allocat-movie.component';\nimport { ConfirmMessageDialogComponent } from './components/utility-components/dialogs/confirm-message-dialog/confirm-message-dialog.component';\nimport { UserAdminDialogComponent } from './components/management/user/user-admin-dialog/user-admin-dialog.component';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport { HomeTrailerComponent } from './components/home/home-trailer/home-trailer.component';\nimport { SafePipe } from './pipes/url-safe/safe.pipe';\nimport { ErrorComponent } from './components/error-page/error/error.component';\nimport { LogOutComponent } from './components/log-out/log-out.component'; \nimport { AuthInterceptor } from './services/utilty-services/security/AuthInterceptor';\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    HomeComponent, \n    UserComponent,\n    MovieComponent,\n    MultiplexComponent,\n    MessageDialogComponent,\n    ProfileComponent,\n    UserEditComponent,\n    MovieEntryComponent,\n    MovieEditComponent,\n    MovieEditDialogComponent,\n    FileUploadComponent,\n    MultiplexEntryComponent,\n    ScreenComponent,\n    AllocatMovieComponent,\n    ConfirmMessageDialogComponent,\n    UserAdminDialogComponent,\n    HomeTrailerComponent,\n    SafePipe,\n    ErrorComponent,\n    LogOutComponent \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatIconModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatCardModule,\n    FormsModule, ReactiveFormsModule,\n    HttpClientModule ,\n    MatDialogModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatTooltipModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatProgressBarModule,\n    MatNativeDateModule, \n    MatRippleModule,\n    MatRadioModule,\n    MatAutocompleteModule\n  ],\n  providers: [\n    { \n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, \n      useValue: { appearance: 'fill' } \n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n    <mat-error>\n        <h2>No such page available!</h2>\n    </mat-error>\n</mat-card>","import { Component, OnInit, Inject, HostListener } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-home-trailer',\n  templateUrl: './home-trailer.component.html',\n  styleUrls: ['./home-trailer.component.css']\n})\nexport class HomeTrailerComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {\n    cancelText: string,\n    confirmText: string,\n    message1: string,\n    message2: string,\n    title: string\n  }, private mdDialogRef: MatDialogRef<HomeTrailerComponent>) { }\n\n  ngOnInit(): void {\n  } \n  public cancel() {\n    this.close(false);\n  }\n  public close(value) {\n    this.mdDialogRef.close(value);\n  }\npublic confirm() {\n    this.close(true);\n}\n@HostListener(\"keydown.esc\")\n  public onEsc() {\n    this.close(false);\n  }\n\n}\n","<div class=\"header\">\n    <mat-card-subtitle>\n    <h3 mat-dialog-title>{{ data.title }}</h3>\n    </mat-card-subtitle>\n</div>\n<hr/>\n<div mat-dialog-content>\n    <!--<iframe width=\"560\" height=\"315\" src=\"{{data.message1}}\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n    </iframe>-->\n    <!--<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/GODAlxW5Pes?autoplay=1\">\n    </iframe>-->\n    <iframe width=\"560\" height=\"315\" [src]=\"data.message1 | safe\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n    </iframe>\n</div>\n<hr/>\n<div mat-dialog-actions>\n    <!--\n    <button mat-raised-button (click)=\"cancel()\">{{ data.cancelText }}</button>\n    <button class=\"btn\" (click)=\"confirm()\">{{ data.confirmText }}</button>\n    -->\n    <button mat-raised-button (click)=\"confirm()\">Ok</button>\n</div> \n \n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MultiplexModel } from 'src/app/models/MultiplexModel';\nimport { MatSort } from '@angular/material/sort';\nimport { MultiplexService } from 'src/app/services/http-services/multiplex-service/multiplex.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ScreenModel } from 'src/app/models/ScreenModel';\nimport { MovieModel } from 'src/app/models/MovieModel';\nimport { HomeDataModel } from 'src/app/models/HomeDataModel';\nimport { HomeTrailerService } from 'src/app/services/http-services/home-trailer-service/home-trailer.service';\nimport { MatPaginator } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  displayedColumns: string[] = [ \n    'movieDetail' \n  ];\n   \n  ELEMENT_DATA = new Array<HomeDataModel>();\n  dataSource: any;\n  multiplexList: any; \n\n\n  constructor(private multiPlexService: MultiplexService, private trailerDialog: HomeTrailerService) { \n    //this.loadData(); \n  }\n\n  ngOnInit(): void { \n    \n  }\n\n  ngAfterViewInit(){ \n    this.loadData(); \n  }\n\n  loadData(){ \n    this.multiPlexService.getAllMultiplexesWithScreens().subscribe(\n      (result) => {\n        this.multiplexList = result;   \n        this.parseElement();\n        this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n        this.dataSource.sort = this.sort;  \n      },\n      (err) => {\n        alert(err.error.message);\n      }\n    );\n  }\n  \n  parseElement(){ \n    var i = 0; \n    for(let data of this.multiplexList){\n      \n      this.ELEMENT_DATA[i] = (new HomeDataModel(\n        data.multiplexId,\n        data.multiplexName,\n        data.location,\n        \n        //Screen details\n        data.screenId,\n        data.screenName,\n        data.screenSize, \n        data.totalSeat, \n        data.showStartDate,\n        data.showEndDate,\n        \n        //Movie details\n        data.movieId,\n        data.movieName,\n        data.category,\n        data.casts,\n        data.producer,\n        data.director,\n        data.description,\n        data.length,\n        data.language,\n        data.trailer,\n        data.posterURL,\n        data.imdbRating,\n        data.userRating,\n        data.releaseDate\n      ));\n        i++;\n    } \n  }\n\n  getRecord(data){\n   \n      let trailer: string = data.trailer; \n\n      let options = {\n        title: data.movieName+' trailer',\n        message1: trailer,\n        message2: '',\n        cancelText: '',\n        confirmText: 'Ok',\n      };\n \n      if(trailer != null){\n        this.trailerDialog.open(options); \n\n        this.trailerDialog.confirmed().subscribe(confirmed => {\n          if (confirmed) { \n              // If updated reload data grid\n            // this.loadData();\n              }\n        });\n      }\n  }\n\n  refreshList(){\n    this.loadData();\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase(); \n  }\n}\n","<div class=\"container\">\n    <div class=\"col-md-12\">\n        <mat-form-field class=\"search-text-full-width\" appearance=\"outline\">\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search location, multiplex, movie ...\" #input>\n            <mat-icon matPrefix color=\"accent\">search&nbsp;</mat-icon>\n        </mat-form-field>\n    </div>\n    <div class=\"col-md-12\">\n        <div class=\"table-container\">\n\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n\n                <ng-container matColumnDef=\"movieDetail\">\n\n                    <th mat-header-cell *matHeaderCellDef style=\"display: none;\">\n                        <!--<span class=\"header-text\"> </span>-->\n                    </th>\n\n                    <td mat-cell *matCellDef=\"let element\" style=\" padding: 5px;\">\n                        \n                          \n\n                                    <mat-card class=\"card\">\n                                        <mat-card-header> \n                                          <mat-card-title>\n                                              <span>{{element.movieName}}</span>\n                                          </mat-card-title> \n                                        </mat-card-header> \n                                        <mat-card>\n                                            <div class=\"row\">\n                                                <div class=\"col-md-4\">\n                                                    <img mat-card-image src='{{(element.posterURL != null)?\"\"+\"https://nidarshan.herokuapp.com\"+element.posterURL:\" \"}}'>\n                                                </div>\n                                                <div class=\"col-md-8\">\n                                                <p>\n                                                    <!--Details-->\n                                                    <span>\n                                                        <mat-card-subtitle>\n                                                            <h2>{{element.multiplexName}}</h2>\n                                                               <h3>{{element.location}}</h3>  \n                                                            <span><strong>Screen :</strong>&nbsp; {{element.screenName}} | Total seats:&nbsp; {{element.totalSeat}}</span>\n                                                             \n                                                        </mat-card-subtitle>\n                                                        <h4>\n                                                            <span><strong>Category :</strong>&nbsp; {{element.category}}</span>\n                                                            <br>\n                                                            <span><strong>Cast :</strong>&nbsp; {{element.casts}}</span>\n                                                            <br>\n                                                            <span><strong>Prodcucer :</strong>&nbsp; {{element.producer}}</span>\n                                                            <br> \n                                                            <span><strong>Director :</strong>&nbsp; {{element.director}}</span>\n                                                        </h4>\n                                                        <div style=\"height: 60px; overflow-y: auto;\">\n                                                            <article><strong>In brief :</strong> &nbsp;{{element.description}}</article>\n                                                        </div>\n\n                                                        \n\n                                                    </span>\n                                                \n                                                    \n                                                \n                                                    \n                                                </p> \n                                                </div>\n                                            </div>\n                                        </mat-card>\n                                        <mat-card-actions>\n                                            <span style=\"color: #ff4081;\"><strong>Releases on : </strong>&nbsp; {{element.releaseDate | date: 'fullDate'}}</span>\n                                          <!--<button mat-button>LIKE</button>\n                                          <button mat-button>SHARE</button>-->\n                                            <span style=\"color: #ff4081; position: absolute; right: 25px;\"><strong>IMDB Rating : </strong>&nbsp;{{element.imdbRating}}</span>\n                                        </mat-card-actions>\n                                      </mat-card>  \n \n                    \n\n                </td>\n \n                </ng-container>\n\n\n                <!-- <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true;\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr> -->\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"getRecord(row)\"></tr>\n                <!-- Row shown when there is no matching data. -->\n                <tr class=\"mat-row\" *matNoDataRow>\n                    <td class=\"mat-cell\">No data matching the filter \"{{input.value}}\"</td>\n                </tr>\n            </table>\n        </div>\n        \n    </div>\n</div>\n<div style=\"position: absolute; bottom: 10px;\">\n    <span><a href=\"https://www.github.com/niteshnidarshan/\">source repository</a></span>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/utilty-services/security/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-log-out',\n  templateUrl: './log-out.component.html',\n  styleUrls: ['./log-out.component.css']\n})\nexport class LogOutComponent implements OnInit {\n\n  constructor(private authService: AuthenticationService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.authService.doLogOut();\n    this.router.navigate(['/home']);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MessageDialogService } from 'src/app/services/utilty-services/dialog/message-dialog.service';\nimport { LoginModel } from 'src/app/models/LoginModel';\nimport { LoginService } from 'src/app/services/http-services/login-service/login.service';\nimport { UserService } from 'src/app/services/http-services/user-service/user.service';\nimport { AuthenticationService } from 'src/app/services/utilty-services/security/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  email: FormControl;\n  password: FormControl;\n  loginFormGroup: FormGroup;\n  user: any; \n\n  constructor(public formBuilder: FormBuilder, private authService: AuthenticationService) {\n    this.email = new FormControl('', [Validators.email, Validators.required]);\n    this.password = new FormControl('', Validators.required);\n    this.loginFormGroup = formBuilder.group({ \n      \"email\": this.email,\n      \"password\": this.password\n    });\n   }\n\n  ngOnInit(): void {\n  }\n\n  // code segments for password hide/show functionality starts\n  hide:boolean = true;\n  get emailInput() { \n    return this.email.value;\n  }\n\n  get passwordInput() { \n    return this.password.value; \n  } \n// code segments for password hide/show functionality ends\n \n  doLogin(){\n    \n    this.authService.doLogin(this.email.value, this.password.value);\n\n  } \n}\n","<div class=\"container\"> \n        \n        <div class=\"row col-md-12\"> \n            \n            <mat-card class=\"card\">\n                <mat-card class=\"header\"> \n                    <mat-card-title>MoviePlex Login</mat-card-title>  \n               </mat-card> \n               <div class=\"col-md-12\">&nbsp;</div> \n                <!--Post Article stats-->\n                <mat-card-content>\n                 \n                <form [formGroup]=\"loginFormGroup\" (ngSubmit)=\"doLogin()\" style=\"padding:5px;\">\n                        <p>\n                            <mat-form-field class=\"login-width\" appearance=\"outline\">\n                                <mat-label>Email</mat-label>\n                                <mat-icon color=\"accent\" matPrefix >email</mat-icon>\n                                <input matInput [type]=\"email\" placeholder=\"Ex: abc@xyz.com\"  [formControl] = \"email\"/>\n                                <mat-error *ngIf=\"loginFormGroup.controls['email'].hasError('required')\">Email required!</mat-error>\n                                <mat-error *ngIf=\"loginFormGroup.controls['email'].hasError('email')\">\n                                    Invalid email!\n                                </mat-error>\n                                \n                            </mat-form-field> \n                        </p>\n                        <p>\n                            <mat-form-field class=\"login-width\" appearance=\"outline\">\n                                <mat-label>Password</mat-label>\n                                <input matInput placeholder=\"Password\" [type]=\"hide ? 'password' : 'text'\" [formControl]=\"password\"/>\n                                <mat-icon color=\"accent\" matPrefix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                                <mat-error *ngIf=\"loginFormGroup.controls['password'].hasError('required')\">Password required!</mat-error>\n                            </mat-form-field>\n                        </p>\n                        <div class=\"col-md-12\"  style=\"align-content: left;\">\n                            <span matTooltip=\"Provide email password combination to login\">\n                            <button type=\"submit\" mat-raised-button [disabled]=\"!loginFormGroup.valid\">\n                              <mat-icon color=\"accent\">person</mat-icon>\n                              <span>Login</span>\n                              \n                            </button>\n                            </span>\n                            <span>&nbsp;<a color=\"accent\" mat-button href=\"www.google.com\">Reset password?</a></span>\n                          </div> \n                </form>\n                </mat-card-content>\n                <mat-card-actions> \n                    \n                </mat-card-actions>  \n            </mat-card>\n        </div> \n     \n</div> \n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { PickDateAdapter, PICK_FORMATS } from 'src/app/components/register/PickDateAdapter';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MovieModel } from 'src/app/models/MovieModel';\nimport { MovieEditDialogService } from 'src/app/services/http-services/movie-edit-dialog-service/movie-edit-dialog.service';\nimport { MovieService } from 'src/app/services/http-services/movie-service/movie.service';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { HttpEventType, HttpErrorResponse } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { requiredFileType } from 'src/app/file-upload/file-upload/requiredFileType';\nimport { toFormData } from 'src/app/file-upload/file-upload/toFormData';\nimport { uploadProgress } from 'src/app/file-upload/file-upload/uploadProgress';\nimport { toResponseBody } from 'src/app/file-upload/file-upload/toResponseBody';\n\n@Component({\n  selector: 'app-movie-edit-dialog',\n  templateUrl: './movie-edit-dialog.component.html',\n  styleUrls: ['./movie-edit-dialog.component.css'],\n  providers: [\n    {provide: DateAdapter, useClass: PickDateAdapter},\n    {provide: MAT_DATE_FORMATS, useValue: PICK_FORMATS}\n]\n})\nexport class MovieEditDialogComponent implements OnInit {\n\n  currentPosterUrl: string;\n  progress = 0;\n  percentDone = 0;\n  posterURLs: File;\n  movieReqData: any;\n  movieResData: any;\n  isMovieEditCanceled: boolean;\n  movieEditForm: FormGroup;\n  updateInfo: string;\n  movieData: MovieModel;\n  reqMovieId: string;\n  movieCategories: string[] = [\n    \"Action\",\n    \"Comedy\",\n    \"Drama\",\n    \"Fantasy\",\n    \"Horror\",\n    \"Mystery\",\n    \"Romance\",\n    \"Thriller\",\n    \"Western\"\n  ];\n\n  constructor(private formBuilder: FormBuilder, private movieService: MovieService, private movieDialogRef: MatDialogRef<MovieEditDialogComponent>) { \n    this.movieReqData = movieService.getMovieData(); \n    this.reqMovieId = this.movieReqData[0].movieId;\n    this.validateForm();\n  }\n\n  ngOnInit(): void { \n  }\n\n  public cancel() { \n    this.isMovieEditCanceled = true;\n    this.movieDialogRef.close(false);\n  }\n\n  validateForm(){\n    let movieCategories:[];\n    if(this.movieReqData[0].category != null){\n      movieCategories = this.movieReqData[0].category.split(\" \");\n    }\n    else{\n      movieCategories = this.movieReqData[0].category;\n    }\n\n    //To Show Poster \n    this.currentPosterUrl = this.movieReqData[0].posterURL; \n    \n    this.movieEditForm = this.formBuilder.group({\n      \"name\": new FormControl(this.movieReqData[0].name,Validators.required),\n      \"category\": new FormControl(movieCategories),\n      \"casts\": new FormControl(this.movieReqData[0].casts),\n      \"producer\": new FormControl(this.movieReqData[0].producer),\n      \"director\": new FormControl(this.movieReqData[0].director), \n      \"description\": new FormControl(this.movieReqData[0].description),\n      \"length\": new FormControl(this.movieReqData[0].length),\n      \"language\": new FormControl(this.movieReqData[0].language), \n      \"trailer\": new FormControl(this.movieReqData[0].trailer),\n      \"posterURL\": new FormControl(this.movieReqData[0].posterURL),\n      \"imdbRating\": new FormControl(this.movieReqData[0].imdbRating), \n      \"releaseDate\": new FormControl(this.movieReqData[0].releaseDate),\n      //\"image\": new FormControl(null, [Validators.required, requiredFileType('jpg')])  \n      \"image\": new FormControl(null)  \n    });\n  }\n\n  public confirm(){\n    let category:string = \"\"; \n    let categories = this.movieEditForm.controls['category'].value; \n    if(categories != null && categories.length>0){\n     this.movieEditForm.controls['category'].value.forEach(element => {\n       category = category+\" \"+element;\n     });\n    }\n\n    let movieModel: MovieModel = new MovieModel(\n      this.movieReqData[0].movieId,//Movie Id should be null on entry\n      this.movieEditForm.controls['name'].value,\n      category,\n      this.movieEditForm.controls['casts'].value,\n      this.movieEditForm.controls['producer'].value,\n      this.movieEditForm.controls['director'].value,\n      this.movieEditForm.controls['description'].value,\n      this.movieEditForm.controls['length'].value,\n      this.movieEditForm.controls['language'].value,\n      this.movieEditForm.controls['trailer'].value,\n      \"\",//this.movieEditForm.controls['posterURL'].value,\n      this.movieEditForm.controls['imdbRating'].value,\n      this.movieReqData[0].userRating, //Should not be updated by admin\n      this.movieEditForm.controls['releaseDate'].value,\n      sessionStorage.getItem(\"userId\"),\n      true,\n      '', //Creation date - handeled by API\n      '' //Modification date - handeled by API\n    );\n    \n  this.movieService.modifyMovie(movieModel).subscribe(\n    (success) => { \n      //this.movieResData = success;\n      if(this.movieEditForm.controls['image'].value != null){\n        this.submitImage(movieModel.movieId);\n      } \n      this.updateInfo = \"Movie Updated successfully!\";\n      this.close(true);\n    },\n    (err) => {\n      this.updateInfo = \"Something wrong on movie update! [\"+err.error.message+\"]\";\n    }\n  ); \n  \n}\npublic close(value) {\n  this.movieDialogRef.close(value);\n}\nsubmitImage(movieId: string) {\n  //To save image on server\n  this.movieService.uploadPoster(toFormData(this.movieEditForm.value), movieId).pipe(\n    uploadProgress(progress => (this.percentDone = progress)),\n    toResponseBody()\n  ).subscribe(event => {  \n    this.updateInfo = \"Movie Updated successfully! \";\n  },\n  (err) => {\n    this.updateInfo = \"File could not be saved ... [\"+err.error.message+\"]\";\n  }\n  \n  );\n   \n}\n\n  dateFormater(date:string):string{    \n    const today = new Date(date);        \n    const day = today.getDate(); \n    const month = today.getMonth()+1;\n    const year = today.getFullYear();\n \n    return year + \"-\" + (month<10 ? (\"0\" + month) : month)+ \"-\" + (day<10 ? (\"0\" + day) : day);    \n  } \n\n}\n"," \n<div class=\"container\">\n    <form [formGroup]=\"movieEditForm\" (ngSubmit)=\"confirm()\">\n    <div class=\"row large-box\" style=\"width: 100%;\">\n        \n        <div class=\"col-md-12\"> \n            <mat-card class=\"header\"> \n                 <mat-card-title>Update Movie</mat-card-title>  \n            </mat-card> \n         </div> \n         <div class=\"col-md-12\">&nbsp; </div>\n        <div class=\"col-md-6\">\n            \n                <p>\n                <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                    <mat-label>Movie Name</mat-label>\n                    <input matInput placeholder=\"Movie Name\" [formControl]=\"movieEditForm.controls['name']\" [value]=\"movieEditForm.controls['name'].value | titlecase\" required/>\n                    <mat-error *ngIf=\"movieEditForm.controls['name'].hasError('required')\">\n                        Movie name is mandatory.\n                    </mat-error>\n                </mat-form-field> \n                </p>\n            \n        </div>\n        <div class=\"col-md-6\">\n            \n                <p>\n                <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                    <mat-label>Category(Movie Genre)</mat-label>\n                    <mat-select [formControl]=\"movieEditForm.controls['category']\" multiple>\n                        <mat-option *ngFor=\"let genre of movieCategories\" [value]=\"genre\">{{genre}}</mat-option>\n                    </mat-select> \n                </mat-form-field>\n                </p>\n            \n        </div>\n\n        <div class=\"col-md-12\">\n            <p>\n                <mat-form-field class=\"text-full-width\" appearance=\"standard\"> \n                    <textarea matInput cdkTextareaAutosize\n                    cdkAutosizeMinRows=\"2\"\n                    cdkAutosizeMaxRows=\"2\"\n                    placeholder=\"Movie discription ...\"  \n                    [formControl]=\"movieEditForm.controls['description']\"></textarea>\n                    <mat-label>Description ...</mat-label>\n                  </mat-form-field>\n\n            </p>\n        </div>\n\n        <div class=\"col-md-12\">   \n            <p>\n                <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                <mat-label>Cast</mat-label>\n                <input matInput placeholder=\"Cast names\" [formControl]=\"movieEditForm.controls['casts']\" />\n                </mat-form-field>\n            </p>\n        </div>\n \n        \n        <div class=\"col-md-6\">\n            \n            <p> \n                <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                    <mat-label>Producer</mat-label>\n                    <input matInput placeholder=\"Producer names\" [formControl]=\"movieEditForm.controls['producer']\" />\n                </mat-form-field>\n            <p>\n\n        </div>\n        \n        <div class=\"col-md-6\">\n            \n            <p>\n            <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n            <mat-label>Director</mat-label>\n            <input matInput placeholder=\"Director names\" [formControl]=\"movieEditForm.controls['director']\"/>\n            </mat-form-field>\n            </p>\n\n        </div>\n\n        <div class=\"col-md-3\">\n            \n            <p>\n            <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n            <mat-label>Language</mat-label>\n            <input matInput placeholder=\"Movie language\" [formControl]=\"movieEditForm.controls['language']\"/>\n            </mat-form-field>\n            </p>\n\n        </div>\n\n        <div class=\"col-md-3\">\n            \n            <p>\n            <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n            <mat-label>Length</mat-label>\n            <input matInput type=\"number\" placeholder=\"In minutes\"  [formControl]=\"movieEditForm.controls['length']\" />\n            </mat-form-field>\n            </p>\n\n        </div>\n\n        <div class=\"col-md-3\">\n            \n            <p>\n            <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n            <mat-label>imdb Rating</mat-label>\n            <input matInput placeholder=\"imdb Rating\" [formControl]=\"movieEditForm.controls['imdbRating']\"/>\n            </mat-form-field>\n            </p>\n\n        </div> \n\n        <div class=\"col-md-3\"> \n            <p>\n                <mat-form-field appearance=\"standard\" class=\"text-full-width\">\n                    <mat-label>Release Date</mat-label>\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"dd-Mon-yyyy\" [formControl]=\"movieEditForm.controls['releaseDate']\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker color=\"accent\"></mat-datepicker>\n\n                    \n                </mat-form-field>\n            </p>\n        </div>\n        \n\n        <div class=\"col-md-4\">\n            \n            <p>\n            <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n            <mat-label>Trailer URL</mat-label>\n            <input matInput placeholder=\"Trailer URL\" [formControl]=\"movieEditForm.controls['trailer']\"/>\n            </mat-form-field>\n            </p>\n\n        </div>\n\n        <div class=\"col-md-4\">\n            \n            <p> \n                <app-file-upload formControlName=\"image\" [progress]=\"progress\"></app-file-upload>               \n            </p>\n\n        </div> \n\n        <div class=\"col-md-4\">\n        \n            <img src='{{\"https://nidarshan.herokuapp.com\"+currentPosterUrl}}' alt=\"Movie poster\">\n        \n \n    </div>\n\n        <div class=\"col-md-12\"  style=\"align-content: center;\">\n            &nbsp;<mat-hint>{{updateInfo}}</mat-hint>\n        </div> \n        <div class=\"col-md-12\"  style=\"align-content: left;\">\n            <span matTooltip=\"Add Movie\">\n            <button type=\"submit\" mat-raised-button [disabled]=\"!(movieEditForm.dirty && movieEditForm.valid)\">\n            <mat-icon color=\"accent\">update</mat-icon>\n            <span>Update Movie</span>\n            \n            </button>\n            </span> \n            &nbsp; &nbsp;\n            <span matTooltip=\"Cancel\">\n                <button mat-raised-button (click)=\"cancel()\">\n                  <mat-icon color=\"accent\">close</mat-icon>\n                  <span>Close</span>\n                  \n                </button>\n            </span>\n        </div>\n\n        <div class=\"col-md-12\"  style=\"align-content: center;\">\n            &nbsp;\n        </div>\n        <div class=\"col-md-12\"  style=\"align-content: center;\">\n            &nbsp;\n        </div>\n        <br>\n        <br>\n        <div class=\"col-md-12\"  style=\"align-content: center;\">\n            &nbsp;\n        </div>\n        <div class=\"col-md-12\"  style=\"align-content: center;\">\n            &nbsp;\n        </div>\n    </div>  \n</form>\n \n</div>\n ","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MovieModel } from 'src/app/models/MovieModel';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MovieService } from 'src/app/services/http-services/movie-service/movie.service';\nimport { MessageDialogService } from 'src/app/services/utilty-services/dialog/message-dialog.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MovieEditDialogService } from 'src/app/services/http-services/movie-edit-dialog-service/movie-edit-dialog.service';\n\n@Component({\n  selector: 'app-movie-edit',\n  templateUrl: './movie-edit.component.html',\n  styleUrls: ['./movie-edit.component.css']\n})\nexport class MovieEditComponent implements OnInit {\n\n  movieList: any;\n  displayedColumns: string[] = [\n    //'movieId',\n    'name',\n    'category',\n    'casts',\n    'producer',\n    'director',\n    'description',\n    'length',\n    'language',\n    //'trailer',\n    //'posterURL',\n    'imdbRating',\n    'userRating', \n    'releaseDate',\n    //'movieAddedBy',\n    'isAlive',\n    'movieCreationTimeStamp',\n    'movieLastModifiedTimeStamp'  \n  ]; \n  ELEMENT_DATA = new Array<MovieModel>();\n  dataSource: any;\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  \n  constructor(private movieService: MovieService, private dialogService: MessageDialogService, private movieEditDialog: MovieEditDialogService) { \n    \n  }\n\n  ngOnInit(): void {\n\n  }\n\n  loadData(){\n    this.movieService.getAllMovies().subscribe((result) => {\n      this.movieList = result;  \n      this.parseElement();\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n      this.dataSource.sort = this.sort; \n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  parseElement(){ \n    var i = 0; \n    for(let data of this.movieList){\n      this.ELEMENT_DATA[i] = (new MovieModel(\n        data.movieId,\n        data.name,\n        data.category,\n        data.casts,\n        data.producer,\n        data.director,\n        data.description,\n        data.length,\n        data.language,\n        data.trailer,\n        data.posterURL,\n        data.imdbRating,\n        data.userRating, \n        data.releaseDate,\n        data.movieAddedBy,\n        data.isAlive,\n        data.movieCreationTimeStamp,\n        data.movieLastModifiedTimeStamp  \n        ));\n        i++;\n    }\n\n  }\n\n  getRecord(data){\n   \n    let movieObj: MovieModel = new MovieModel(\n        data.movieId,\n        data.name, \n        data.category,\n        data.casts,\n        data.producer,\n        data.director,\n        data.description,\n        data.length,\n        data.language,\n        data.trailer,\n        data.posterURL,\n        data.imdbRating,\n        data.userRating, \n        data.releaseDate,\n        data.movieAddedBy,\n        data.isAlive,\n        data.movieCreationTimeStamp,\n        data.movieLastModifiedTimeStamp\n      ); \n\n      //Setting data to send in movie-edit-dialog\n      this.movieService.clearMovieData();\n      this.movieService.setMovieData(movieObj); \n\n      let options = {\n        title: 'Movie Edit',\n        message1: '',\n        message2: '',\n        cancelText: 'Cancel',\n        confirmText: 'Update',\n      };\n \n      this.movieEditDialog.open(options); \n\n      this.movieEditDialog.confirmed().subscribe(confirmed => {\n        if (confirmed) { \n            // If updated reload data grid\n            this.loadData();\n            }\n      });\n  }\n  refreshList(){\n    this.loadData();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","<div class=\"conatiner\">\n<mat-form-field appearance=\"outline\" class=\"search-text-full-width\">  \n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search ...\" #input>\n    <mat-icon matPrefix color=\"accent\">search&nbsp;</mat-icon> \n</mat-form-field> \n<div class=\"table-container\">  \n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z0\" matSort>\n \n<!-- MovieId Column -->\n<!--<ng-container matColumnDef=\"movieId\">\n    <th mat-header-cell *matHeaderCellDef> \n        <span class=\"header-text\">Movie Id </span>\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> \n        <span class=\"truncate-text\">{{element.movieId}} </span>\n    </td>\n</ng-container>-->\n\n<!-- Name Column -->\n<ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header> \n        <span class=\"header-text\">Name </span>\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> \n        <span class=\"truncate-text\">{{element.name}} </span>\n    </td>\n</ng-container>\n\n<!-- Category Column -->\n<ng-container matColumnDef=\"category\">\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header> \n        <span class=\"header-text\">Category </span>\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> \n        <span class=\"truncate-text\">{{element.category}}</span>\n     </td>\n</ng-container>\n\n<!-- Casts Column -->\n<ng-container matColumnDef=\"casts\">\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header> \n        <span class=\"header-text\">Casts </span>\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> \n        <span class=\"truncate-text\">{{element.casts}}</span>\n    </td>\n</ng-container>\n\n<!-- producer Column -->\n<ng-container matColumnDef=\"producer\">\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header> \n        <span class=\"header-text\">Producer </span>\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> \n        <span class=\"truncate-text\">{{element.producer}}</span>\n            \n    </td>\n</ng-container>\n\n<!-- director Column -->\n<ng-container matColumnDef=\"director\">\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header> \n        <span class=\"header-text\">Director </span>\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> \n        <span class=\"truncate-text\">{{element.director}} </span>\n            \n        </td>\n</ng-container>\n\n<ng-container matColumnDef=\"description\">\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header> \n        <span class=\"header-text\">Description </span>\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> \n        <span>{{element.description}} </span>\n            \n        </td>\n</ng-container>\n\n<!-- length Column -->\n<ng-container matColumnDef=\"length\">\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header> \n        <span class=\"header-text\">Length </span>\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> \n        <span class=\"truncate-text\">{{element.length}} </span>\n\n    </td>\n</ng-container>\n\n<!-- language Column -->\n<ng-container matColumnDef=\"language\">\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header> \n        <span class=\"header-text\">Language </span>\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> \n        <span class=\"truncate-text\">{{element.language}} </span>\n\n        </td>\n</ng-container>\n\n <!-- trailer Column -->\n <!--<ng-container matColumnDef=\"trailer\">\n    <th mat-header-cell *matHeaderCellDef> \n        <span class=\"header-text\">Trailer </span>\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> \n        <span class=\"truncate-text\">{{element.trailer}} </span>\n    </td>\n</ng-container>-->\n\n <!-- posterURL Column -->\n <!-- <ng-container matColumnDef=\"posterURL\">\n    <th mat-header-cell *matHeaderCellDef> \n        <span class=\"header-text\">Poster URL</span>\n     </th>\n    <td mat-cell *matCellDef=\"let element\"> \n        <span class=\"truncate-text\">{{element.posterURL}} </span>\n    </td>\n</ng-container>-->\n\n<!-- imdbRating Column -->\n<ng-container matColumnDef=\"imdbRating\">\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header> \n        <span class=\"header-text\">imdb Rating </span>\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> \n        <span class=\"truncate-text\">{{element.imdbRating}} </span>\n    </td>\n</ng-container>\n\n<!-- userRating Column -->\n<ng-container matColumnDef=\"userRating\">\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header> \n        <span class=\"header-text\">user Rating </span>\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> \n        <span class=\"truncate-text\">{{element.userRating}} </span>\n    </td>\n</ng-container>\n\n<!-- releaseDate Column -->\n<ng-container matColumnDef=\"releaseDate\">\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header> \n        <span class=\"header-text\">Release Date </span>\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> \n        <span class=\"truncate-text\">{{element.releaseDate | date: 'mediumDate'}} </span>\n    </td>\n</ng-container>\n\n<!-- movieAddedBy Column -->\n<!--<ng-container matColumnDef=\"movieAddedBy\">\n    <th mat-header-cell *matHeaderCellDef> \n        <span class=\"header-text\" mat-sort-header>Movie Added By </span>\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> \n        <span class=\"truncate-text\">{{element.movieAddedBy}} </span>\n    </td>\n</ng-container>-->\n\n<!-- isAlive Column -->\n<ng-container matColumnDef=\"isAlive\">\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header> \n        <span class=\"header-text\">Alive </span>\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> \n        <span class=\"truncate-text\">{{element.isAlive}} </span>\n    </td>\n</ng-container>\n\n<!-- movieCreationTimeStamp Column -->\n<ng-container matColumnDef=\"movieCreationTimeStamp\">\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header> \n        <span class=\"header-text\" >Movie Created On </span>\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> \n        <span class=\"truncate-text\">{{element.movieCreationTimeStamp | date: 'full'}} </span>\n    </td>\n</ng-container>\n\n<!-- movieLastModifiedTimeStamp Column -->\n<ng-container matColumnDef=\"movieLastModifiedTimeStamp\">\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header> \n        <span class=\"header-text\">Last Modified </span>\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> \n        <span class=\"truncate-text\">{{element.movieLastModifiedTimeStamp | date: 'full'}} </span>\n    </td>\n</ng-container>\n\n\n<tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true;\"></tr>\n<tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"getRecord(row)\"></tr> \n\n<!-- Row shown when there is no matching data. -->\n<tr class=\"mat-row\" *matNoDataRow>\n    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n</tr>\n</table> \n</div>\n<div class=\"col-md-12\">\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25]\" showFirstLastButtons></mat-paginator>\n<span matTooltip=\"Refresh List\">\n    <button type=\"button\" mat-icon-button (click)=\"refreshList()\">\n        <mat-icon color=\"accent\">refresh</mat-icon>\n    </button> \n</span>\n</div>\n<br>\n<br> \n</div>","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MovieModel } from 'src/app/models/MovieModel';\nimport { MovieService } from 'src/app/services/http-services/movie-service/movie.service';\nimport { MessageDialogService } from 'src/app/services/utilty-services/dialog/message-dialog.service';\nimport { HttpEventType, HttpErrorResponse } from '@angular/common/http'; \nimport { requiredFileType } from 'src/app/file-upload/file-upload/requiredFileType';\nimport { toFormData } from 'src/app/file-upload/file-upload/toFormData';\nimport { uploadProgress } from 'src/app/file-upload/file-upload/uploadProgress';\nimport { toResponseBody } from 'src/app/file-upload/file-upload/toResponseBody';\n\n@Component({\n  selector: 'app-movie-entry',\n  templateUrl: './movie-entry.component.html',\n  styleUrls: ['./movie-entry.component.css']\n})\nexport class MovieEntryComponent implements OnInit {\n \nprogress = 0;\npercentDone = 0;\n  posterURLs: File;\n  movieAddForm: FormGroup;\n  updateInfo: string;\n  movieData: MovieModel;\n  movieDataResponse: any; \n  movieCategories: string[] = [\n    \"Action\",\n    \"Comedy\",\n    \"Drama\",\n    \"Fantasy\",\n    \"Horror\",\n    \"Mystery\",\n    \"Romance\",\n    \"Thriller\",\n    \"Western\"\n  ];\n\n  constructor(private formBuilder: FormBuilder, private movieService: MovieService, private dialogService: MessageDialogService) { \n    this.validateForm(); \n  }\n\n  ngOnInit(): void {\n  }\n\n  validateForm(){\n    this.movieAddForm = this.formBuilder.group({\n      \"name\": new FormControl('',Validators.required),\n      \"category\": new FormControl(),\n      \"casts\": new FormControl(),\n      \"producer\": new FormControl(),\n      \"director\": new FormControl(), \n      \"discription\": new FormControl(),\n      \"length\": new FormControl(),\n      \"language\": new FormControl(), \n      \"trailer\": new FormControl(),\n      \"posterURL\": [null],\n      \"imdbRating\": new FormControl(), \n      \"releaseDate\": new FormControl(),\n      //\"image\": new FormControl(null, [Validators.required, requiredFileType('jpg')]) \n      \"image\": new FormControl(null) \n    });\n  }\n \n  addMovie(){ \n    let category:string = \"\"; \n    let categories = this.movieAddForm.controls['category'].value; \n    if(categories != null && categories.length>0){\n     this.movieAddForm.controls['category'].value.forEach(element => {\n       category = category+\" \"+element;\n     });\n    }\n    else{\n      category = categories;\n    }\n\n    let movieModel: MovieModel = new MovieModel(\n      \"\",//Movie Id should be null on entry\n      this.movieAddForm.controls['name'].value,\n      category,\n      this.movieAddForm.controls['casts'].value,\n      this.movieAddForm.controls['producer'].value,\n      this.movieAddForm.controls['director'].value,\n      this.movieAddForm.controls['discription'].value,\n      this.movieAddForm.controls['length'].value,\n      this.movieAddForm.controls['language'].value,\n      this.movieAddForm.controls['trailer'].value,\n      \"\",//this.movieAddForm.controls['posterURL'].value,\n      this.movieAddForm.controls['imdbRating'].value,\n      0.0, //User rating - initailly 0\n      this.movieAddForm.controls['releaseDate'].value,\n      sessionStorage.getItem(\"userId\"),\n      true,\n      '', //Creation date - handeled by API\n      '' //Modification date - handeled by API\n    );\n\n    \n  this.movieService.addMovie(movieModel).subscribe(\n    (success) => {\n      this.movieDataResponse = success;   \n      \n      if(this.movieAddForm.controls['image'].value != null){\n        this.submitImage(this.movieDataResponse.movieId);\n      }\n\n      let options = {\n        title: 'Movie Entry',\n        message1: \"Movie added successfully.\",\n        message2: \"\",\n        cancelText: 'Ok',\n        confirmText: 'Ok'\n      };\n \n      this.dialogService.open(options);\n      this.movieAddForm.reset();\n    },\n    (err) => {\n      let options = {\n        title: 'Movie Entry',\n        message1: err.error.message,\n        message2: \"\",\n        cancelText: 'Ok',\n        confirmText: 'Ok'\n      };\n \n      this.dialogService.open(options);\n    }\n  );\n\n\n  } \n  submitImage(movieId: string) {\n    this.movieService.uploadPoster(toFormData(this.movieAddForm.value), movieId).pipe(\n      uploadProgress(progress => (this.percentDone = progress)),\n      toResponseBody()\n    ).subscribe(event => {  \n        this.movieAddForm.reset(); \n    },\n    (err) => {\n      alert(\"File could not be saved ... \"+err.error.message);\n    }\n    \n    );\n     \n  } \n}\n","<div class=\"container\">\n    <form [formGroup]=\"movieAddForm\" (ngSubmit)=\"addMovie()\">\n    <div class=\"row large-box\" style=\"width: 100%;\">\n        \n    <div class=\"col-md-12\">&nbsp;</div>\n        <div class=\"col-md-6\">\n            \n                <p>\n                <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                    <mat-label>Movie Name</mat-label>\n                    <input matInput placeholder=\"Movie Name\" [formControl]=\"movieAddForm.controls['name']\" [value]=\"movieAddForm.controls['name'].value | titlecase\" required/>\n                    <mat-error *ngIf=\"movieAddForm.controls['name'].hasError('required')\">\n                        Movie name is mandatory.\n                    </mat-error>\n                </mat-form-field> \n                </p>\n            \n        </div>\n        <div class=\"col-md-6\">\n            \n                <p>\n                <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                    <mat-label>Category(Movie Genre)</mat-label>\n                    <mat-select [formControl]=\"movieAddForm.controls['category']\" multiple>\n                        <mat-option *ngFor=\"let genre of movieCategories\" [value]=\"genre\">{{genre}}</mat-option>\n                    </mat-select> \n                </mat-form-field>\n                </p>\n            \n        </div>\n\n        <div class=\"col-md-12\">\n            <p>\n                <mat-form-field class=\"full-width\" appearance=\"standard\"> \n                    <textarea matInput cdkTextareaAutosize\n                    cdkAutosizeMinRows=\"2\"\n                    cdkAutosizeMaxRows=\"2\" \n                    [formControl]=\"movieAddForm.controls['discription']\"></textarea>\n                    <mat-label >Description ...</mat-label>\n                  </mat-form-field>\n\n            </p>\n        </div>\n\n        <div class=\"col-md-12\">   \n            <p>\n                <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                <mat-label>Cast</mat-label>\n                <input matInput placeholder=\"Cast names\" [formControl]=\"movieAddForm.controls['casts']\" />\n                </mat-form-field>\n            </p>\n        </div>\n\n        \n        <div class=\"col-md-6\">\n            \n            <p> \n                <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                    <mat-label>Producer</mat-label>\n                    <input matInput placeholder=\"Producer names\" [formControl]=\"movieAddForm.controls['producer']\" />\n                </mat-form-field>\n            <p>\n\n        </div>\n        \n        <div class=\"col-md-6\">\n            \n            <p>\n            <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n            <mat-label>Director</mat-label>\n            <input matInput placeholder=\"Director names\" [formControl]=\"movieAddForm.controls['director']\"/>\n            </mat-form-field>\n            </p>\n\n        </div>\n\n        <div class=\"col-md-3\">\n            \n            <p>\n            <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n            <mat-label>Language</mat-label>\n            <input matInput placeholder=\"Movie language\" [formControl]=\"movieAddForm.controls['language']\"/>\n            </mat-form-field>\n            </p>\n\n        </div>\n\n        <div class=\"col-md-3\">\n            \n            <p>\n            <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n            <mat-label>Length</mat-label>\n            <input matInput type=\"number\" placeholder=\"In minutes\"  [formControl]=\"movieAddForm.controls['length']\" />\n            </mat-form-field>\n            </p>\n\n        </div>\n\n        <div class=\"col-md-3\">\n            \n            <p>\n            <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n            <mat-label>imdb Rating</mat-label>\n            <input matInput type=\"number\" placeholder=\"imdb Rating up to 10\" [formControl]=\"movieAddForm.controls['imdbRating']\"/>\n            </mat-form-field>\n            </p>\n\n        </div> \n\n        <div class=\"col-md-3\"> \n            <p>\n                <mat-form-field appearance=\"standard\" class=\"text-full-width\">\n                    <mat-label>Release Date</mat-label>\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"dd/Mon/yyyy\" [formControl]=\"movieAddForm.controls['releaseDate']\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker color=\"accent\"></mat-datepicker>\n\n                    \n                </mat-form-field>\n            </p>\n        </div>\n        \n\n        <div class=\"col-md-6\">\n            \n            <p>\n            <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n            <mat-label>Trailer URL</mat-label>\n            <input matInput placeholder=\"Trailer URL\" [formControl]=\"movieAddForm.controls['trailer']\"/>\n            </mat-form-field>\n            </p>\n\n        </div>\n        \n        <div class=\"col-md-6\">\n            \n            <app-file-upload formControlName=\"image\" [progress]=\"progress\"></app-file-upload>\n        </div>\n              \n        <div class=\"col-md-12\"  style=\"align-content: center;\">\n            &nbsp;<mat-hint>{{updateInfo}}</mat-hint>\n        </div>\n        <div class=\"col-md-12\"  style=\"align-content: center;\">\n            &nbsp;\n        </div>\n\n        <div class=\"col-md-12\"  style=\"align-content: left;\">\n            <span matTooltip=\"Add Movie\">\n            <button type=\"submit\" mat-raised-button [disabled]=\"!movieAddForm.valid\">\n            <mat-icon color=\"accent\">add</mat-icon>\n            <span>Add Movie</span>\n            \n            </button>\n            </span> \n            \n        </div>\n       \n        <div class=\"col-md-12\"  style=\"align-content: center;\">\n            &nbsp;\n        </div>\n        <div class=\"col-md-12\"  style=\"align-content: center;\">\n            &nbsp;\n        </div>\n    </div> \n</form>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MovieModel } from 'src/app/models/MovieModel';\nimport { MovieService } from 'src/app/services/http-services/movie-service/movie.service';\nimport { MessageDialogService } from 'src/app/services/utilty-services/dialog/message-dialog.service';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MovieEditComponent } from './movie-edit/movie-edit.component';\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class MovieComponent implements OnInit {\n\n   \n  constructor(private formBuilder: FormBuilder, private movieService: MovieService, private dialogService: MessageDialogService) {\n     \n   }\n\n  ngOnInit(): void {\n    \n  }\n\n  movieTabSelect($event, edit){ \n    if($event.index==1){\n      //to load refreshed records on edit tab - need to load the MovieEditComponent\n      //For this need to call its method-getLoad()\n      //To call one component method in another component need to put a #argument with its selector tag then its method can be called\n      //see movieTabSelect(-,-) origin in html\n      edit.loadData();\n    }\n  }  \n}\n","<div class=\"container\"   class=\"mat-elevation-z5\">\n<mat-tab-group dynamicHeight  backgroundColor=\"primary\" (selectedTabChange)=\"movieTabSelect($event, edit)\">\n    <mat-tab label=\"Movie Entry\">  \n        <app-movie-entry></app-movie-entry>\n    </mat-tab> \n    <mat-tab label=\"Modify\"> \n        <app-movie-edit #edit></app-movie-edit>    \n    </mat-tab>\n\n</mat-tab-group>\n</div>  \n    \n        \n  ","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MultiplexModel } from 'src/app/models/MultiplexModel';\nimport { MultiplexService } from 'src/app/services/http-services/multiplex-service/multiplex.service';\nimport { MessageDialogService } from 'src/app/services/utilty-services/dialog/message-dialog.service';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-multiplex-entry',\n  templateUrl: './multiplex-entry.component.html',\n  styleUrls: ['./multiplex-entry.component.css']\n})\nexport class MultiplexEntryComponent implements OnInit {\n\n  registerMplexForm: FormGroup;\n  isMultiplexRegistered: boolean = false;\n  multiplexList: any; \n\n  ELEMENT_DATA = new Array<MultiplexModel>();\n  dataSource: any;\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  displayedColumns: string[] = [\n    'name',\n    'location',\n    'numberOfScreens',\n    'mPlexCreateTimeStamp',\n    'mPlexModifiedTimeStamp'\n  ]; \n\n  constructor(private formBuilder: FormBuilder, private multiPlexService: MultiplexService, private dialogService: MessageDialogService) { }\n\n  ngOnInit(): void {\n    this.validateForm();\n    this.loadData(); \n  }\n\n  validateForm(){\n    this.registerMplexForm = this.formBuilder.group({\n      \"name\": new FormControl('',Validators.required),\n      \"location\": new FormControl(), \n    });\n  }\n\n  registerMplex(){\n    let mPlexModel: MultiplexModel = new MultiplexModel(\n      \"\",\n      this.registerMplexForm.controls['name'].value,\n      this.registerMplexForm.controls['location'].value,\n      null,\n      0,\n      sessionStorage.getItem(\"userId\"),\n      true,\n      \"\",\n      \"\"\n    );\n\n    this.multiPlexService.addMultiplex(mPlexModel).subscribe(\n      (success) => {\n        this.loadData();\n        this.isMultiplexRegistered = true;\n        let options = {\n          title: 'Multiplex Registration',\n          message1: \"Multiplex registered successfully. Now you can add screens\",\n          message2: \"\",\n          cancelText: 'Ok',\n          confirmText: 'Ok'\n        };\n   \n        this.dialogService.open(options);\n        this.registerMplexForm.disabled;\n      },\n      (err) => {\n        let options = {\n          title: 'Multiplex Registration',\n          message1: err.error.message,\n          message2: \"\",\n          cancelText: 'Ok',\n          confirmText: 'Ok'\n        };\n   \n        this.dialogService.open(options);\n      }\n    );\n  }\n\n  loadData(){\n    let userId = sessionStorage.getItem(\"userId\");\n    this.multiPlexService.getAllMultiplexOfUser(userId).subscribe(\n      (result) => {\n        this.multiplexList = result;  \n         \n        this.parseElement();\n        this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n        this.dataSource.sort = this.sort; \n        this.dataSource.paginator = this.paginator;\n      },\n      (err) => {\n        alert(err.error.message );\n      }\n    );\n  }\n\n  parseElement(){ \n    var i = 0; \n    for(let data of this.multiplexList){\n      this.ELEMENT_DATA[i] = (new MultiplexModel(\n        data.multiplexId,\n        data.name,\n\t    data.location,\n        data.screenDetailList,\n        data.numberOfScreens,\n        data.associatedUserId,\n        data.isAlive,\n        data.mPlexCreateTimeStamp,\n        data.mPlexModifiedTimeStamp\n      ));\n        i++;\n    }\n\n  }\n\n  refreshList(){\n    this.loadData();\n  }\n  addScreen(){\n    alert(\"work in progress!\");\n  }\n\n  getRecord(data: any){\n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","<div class=\"container\" style=\"max-height: 100%;\"> \n    <div class=\"col-md-12\">&nbsp;</div> \n    <div class=\"col-md-12\" style=\"border-style: groove; padding: 10px; background-color: whitesmoke;\">\n    <form [formGroup]=\"registerMplexForm\" (ngSubmit)=\"registerMplex()\"> \n        <div class=\"row\"> \n            <div class=\"col-md-5\">\n                 \n                    <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                        <mat-label>Multiplex Name</mat-label>\n                        <input matInput placeholder=\"Multiplex Name\" [formControl]=\"registerMplexForm.controls['name']\" [value]=\"registerMplexForm.controls['name'].value | titlecase\" required/>\n                        <mat-error *ngIf=\"registerMplexForm.controls['name'].hasError('required')\">\n                            Movie name is mandatory.\n                        </mat-error>\n                    </mat-form-field>  \n                \n            </div>\n            <div class=\"col-md-5\"> \n                        <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                            <mat-label>Location</mat-label>\n                            <input matInput placeholder=\"Address\" [formControl]=\"registerMplexForm.controls['location']\" />\n                        </mat-form-field> \n            </div> \n     \n            <div class=\"col-md-2\">\n                <span matTooltip=\"Fill registration form to enable\">\n                    <button type=\"submit\" mat-raised-button [disabled]=\"!registerMplexForm.valid\">\n                    <mat-icon color=\"accent\">add</mat-icon>\n                    <span>Register</span>\n                    \n                    </button>\n                </span>\n                \n            </div>\n        </div>\n    </form> \n    </div>\n    <div class=\"col-md-12\">&nbsp;</div>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <span matTooltip=\"Add screen to the Multiplex\" style=\"display: none;\">\n                <button mat-raised-button (click)=\"addScreen()\" [disabled]=\"!isMultiplexRegistered\">\n                <mat-icon color=\"accent\">add</mat-icon>\n                <span>Add Screen</span>\n                \n                </button>\n            </span>\n            \n        </div> \n\n    </div> \n    \n        <mat-form-field class=\"search-text-full-width\" appearance=\"outline\">  \n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search ...\" #input>\n            <mat-icon matPrefix color=\"accent\">search&nbsp;</mat-icon> \n        </mat-form-field>   \n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z0\" matSort>\n        \n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Multiplex Name </span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{element.name}} </span>\n            </td>\n        </ng-container>\n         \n        <ng-container matColumnDef=\"location\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Location </span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{element.location}} </span>\n            </td>\n        </ng-container> \n\n        <ng-container matColumnDef=\"numberOfScreens\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Total screens </span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{element.numberOfScreens}} </span>\n            </td>\n        </ng-container> \n\n        <ng-container matColumnDef=\"mPlexCreateTimeStamp\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Created On </span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{element.mPlexCreateTimeStamp | date: 'shortDate'}} </span>\n            </td>\n        </ng-container>\n         \n        <ng-container matColumnDef=\"mPlexModifiedTimeStamp\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Last Modified </span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{element.mPlexModifiedTimeStamp | date: 'shortDate'}} </span>\n            </td>\n        </ng-container>\n        \n        \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true;\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"getRecord(row)\"></tr> \n        \n        <!-- Row shown when there is no matching data. -->\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n        </tr>\n        </table>\n         \n        \n        <mat-paginator [pageSizeOptions]=\"[5, 10, 25]\" showFirstLastButtons></mat-paginator>\n        <span matTooltip=\"Refresh List\">\n            <button type=\"button\" mat-icon-button (click)=\"refreshList()\">\n                <mat-icon color=\"accent\">refresh</mat-icon>\n            </button> \n        </span>\n        <br>\n        <br>  \n        \n</div> \n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MultiplexModel } from 'src/app/models/MultiplexModel';\nimport { MultiplexService } from 'src/app/services/http-services/multiplex-service/multiplex.service';\nimport { MessageDialogService } from 'src/app/services/utilty-services/dialog/message-dialog.service';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-multiplex',\n  templateUrl: './multiplex.component.html',\n  styleUrls: ['./multiplex.component.css']\n})\nexport class MultiplexComponent implements OnInit {\n\n    \n  constructor(private formBuilder: FormBuilder, private multiPlexService: MultiplexService, private dialogService: MessageDialogService) { }\n\n  ngOnInit(): void {\n     \n  }\n \n}\n","<div class=\"container\"   class=\"mat-elevation-z5\">\n    <mat-tab-group  backgroundColor=\"primary\">\n        <mat-tab label=\"Multiplex Registration\">  \n            <app-multiplex-entry></app-multiplex-entry>\n        </mat-tab> \n        <mat-tab label=\"Screen\"> \n            <app-screen></app-screen>  \n        </mat-tab>\n    \n    </mat-tab-group>\n    </div> \n\n","import { Component, OnInit } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { PickDateAdapter, PICK_FORMATS } from 'src/app/components/register/PickDateAdapter';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MultiplexService } from 'src/app/services/http-services/multiplex-service/multiplex.service';\nimport { MovieService } from 'src/app/services/http-services/movie-service/movie.service';\nimport { ScreenModel } from 'src/app/models/ScreenModel';\n\n@Component({\n  selector: 'app-allocat-movie',\n  templateUrl: './allocat-movie.component.html',\n  styleUrls: ['./allocat-movie.component.css'],\n  providers: [\n    { provide: DateAdapter, useClass: PickDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: PICK_FORMATS }\n  ]\n})\nexport class AllocatMovieComponent implements OnInit {\n\n  screenEditForm: FormGroup;\n  updateInfo: string;\n  errorInfo: string;\n  screenData: any;\n  movieList: any;\n  selectedMovieId: string;\n  isCancel: boolean = false;\n\n  constructor(private formBuilder: FormBuilder, private movieService: MovieService, private multiplexService: MultiplexService, private allocateMovieDialog: MatDialogRef<AllocatMovieComponent>) {\n\n    this.screenData = this.multiplexService.getScreenData();\n    this.loadMovieList();\n    this.validateForm();\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  loadMovieList() {\n    this.movieService.getAllMovies().subscribe(\n      (success) => {\n        this.movieList = success;\n      }\n    );\n  }\n\n  validateForm() {\n    this.screenEditForm = this.formBuilder.group({\n      \"screenName\": new FormControl(this.screenData[0].screenName, Validators.required),\n      \"screenSize\": new FormControl(this.screenData[0].screenSize),\n      \"totalSeat\": new FormControl(this.screenData[0].totalSeat),\n      \"movie\": new FormControl(this.screenData[0].movieId),\n      \"showStartDate\": new FormControl(this.screenData[0].showStartDate),\n      \"showEndDate\": new FormControl(this.screenData[0].showEndDate)\n    });\n  }\n\n  getSelectedMovie(event) {\n    this.selectedMovieId = event.value;\n  }\n\n  public confirmEdit() {\n    if (!this.isCancel) {\n      let screenModel: ScreenModel = new ScreenModel(\n        this.screenData[0].screenId,\n        this.screenData[0].multiplexId,\n        this.screenEditForm.controls['screenName'].value,\n        this.screenEditForm.controls['screenSize'].value,\n        this.screenEditForm.controls['totalSeat'].value,\n        this.screenEditForm.controls['movie'].value,\n        null,\n        this.screenEditForm.controls['showStartDate'].value,\n        this.screenEditForm.controls['showEndDate'].value,\n        true,\n        \"\",\n        \"\"\n      );\n\n      this.multiplexService.modifyScreen(screenModel).subscribe(\n        (success) => {\n          this.updateInfo = \"Record updated succesfully!\";\n        },\n        (err) => {\n          this.errorInfo = \"Data could not modified - \" + err.error.message;\n        }\n      );\n    }\n  }\n\n  public cancel() {\n    this.isCancel = true;\n    this.allocateMovieDialog.close(false);\n  }\n  public close(value) { \n    this.allocateMovieDialog.close(value);\n  }\n\n  dateFormater(date: string): string {\n    const today = new Date(date);\n    const day = today.getDate();\n    const month = today.getMonth() + 1;\n    const year = today.getFullYear();\n\n    return year + \"-\" + (month < 10 ? (\"0\" + month) : month) + \"-\" + (day < 10 ? (\"0\" + day) : day);\n  }\n\n}\n","<div class=\"container\">\n    <form [formGroup]=\"screenEditForm\" (ngSubmit)=\"confirmEdit()\">\n        <div class=\"row large-box\" style=\"width: 100%;\">\n\n            <div class=\"col-md-12\">\n                <mat-card class=\"header\">\n                    <mat-card-title>Update Screen</mat-card-title>\n                </mat-card>\n            </div>\n            <div class=\"col-md-12\">&nbsp; </div>\n            <div class=\"col-md-6\">\n\n                <p>\n                    <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n                        <mat-label>Screen Name</mat-label>\n                        <input matInput placeholder=\"Screen Name\" [formControl]=\"screenEditForm.controls['screenName']\"\n                            [value]=\"screenEditForm.controls['screenName'].value | titlecase\" required />\n                        <mat-error *ngIf=\"screenEditForm.controls['screenName'].hasError('required') && screenEditForm.controls['screenName'].dirty\">\n                            Screen name is mandatory.\n                        </mat-error>\n                    </mat-form-field>\n                </p>\n\n            </div>\n            <div class=\"col-md-2\"> \n                <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                    <mat-label>Screen Size</mat-label>\n                    <input matInput type=\"number\" placeholder=\"Screen Size\" [formControl]=\"screenEditForm.controls['screenSize']\" />\n                </mat-form-field> \n            </div> \n            <div class=\"col-md-2\"> \n                <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                    <mat-label>Number of seats</mat-label>\n                    <input matInput type=\"number\" placeholder=\"Total number of seats\" [formControl]=\"screenEditForm.controls['totalSeat']\" />\n                </mat-form-field> \n            </div>\n\n            <div class=\"col-md-12\">\n\n                <p>\n                    <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n                        <mat-label>Allocate movie</mat-label>\n                        <mat-select [formControl]=\"screenEditForm.controls['movie']\" (selectionChange)=\"getSelectedMovie($event)\">\n                            <mat-option [value]=\"\">None</mat-option>\n                            <mat-option *ngFor=\"let movie of movieList\" [value]=\"movie.movieId\">\n                                <span class=\"list-span\">\n                                    <span class=\"sub-list-span\"><img src='{{\"https://nidarshan.herokuapp.com\"+movie.posterURL}}'></span>\n                                    <span class=\"sub-list-span\">{{movie.name}}</span>\n                                    <span class=\"sub-list-span\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Release Date:&nbsp;{{movie.releaseDate | date: 'fullDate'}}</span>\n                                </span>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </p>\n\n            </div>\n\n            <div class=\"col-md-3\">\n                <p>\n                    <mat-form-field appearance=\"standard\" class=\"text-full-width\">\n                        <mat-label>Show Start Date</mat-label>\n                        <input matInput [matDatepicker]=\"startDatePicker\" placeholder=\"dd-Mon-yyyy\"\n                            [formControl]=\"screenEditForm.controls['showStartDate']\">\n                        <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\n                        <mat-datepicker #startDatePicker color=\"accent\"></mat-datepicker>\n\n\n                    </mat-form-field>\n                </p>\n            </div>\n            <div class=\"col-md-3\">\n                <p>\n                    <mat-form-field appearance=\"standard\" class=\"text-full-width\">\n                        <mat-label>Show End Date</mat-label>\n                        <input matInput [matDatepicker]=\"endDatePicker\" placeholder=\"dd-Mon-yyyy\"\n                            [formControl]=\"screenEditForm.controls['showEndDate']\">\n                        <mat-datepicker-toggle matSuffix [for]=\"endDatePicker\"></mat-datepicker-toggle>\n                        <mat-datepicker #endDatePicker color=\"accent\"></mat-datepicker>\n\n\n                    </mat-form-field>\n                </p>\n            </div>\n    \n            <div class=\"col-md-12\" style=\"align-content: center;\">\n                &nbsp;<mat-hint>{{updateInfo}}</mat-hint>\n                &nbsp;<mat-error>{{errorInfo}}</mat-error>\n                <br>\n            </div>\n            <div class=\"col-md-12\" style=\"align-content: left;\">\n                <span matTooltip=\"Add Movie\">\n                    <button type=\"submit\" mat-raised-button [disabled]=\"!(screenEditForm.dirty && screenEditForm.valid)\">\n                        <mat-icon color=\"accent\">update</mat-icon>\n                        <span>Update Screen</span>\n\n                    </button>\n                </span>\n                &nbsp; &nbsp;\n                <span matTooltip=\"Cancel\">\n                    <button mat-raised-button (click)=\"cancel()\">\n                        <mat-icon color=\"accent\">close</mat-icon>\n                        <span>Close</span>\n\n                    </button>\n                </span>\n            </div>\n\n            <div class=\"col-md-12\" style=\"align-content: center;\">\n                &nbsp;\n            </div>\n            <div class=\"col-md-12\" style=\"align-content: center;\">\n                &nbsp;\n            </div>\n            <br>\n            <br>\n            <div class=\"col-md-12\" style=\"align-content: center;\">\n                &nbsp;\n            </div>\n            <div class=\"col-md-12\" style=\"align-content: center;\">\n                &nbsp;\n            </div>\n        </div>\n    </form>\n\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MultiplexModel } from 'src/app/models/MultiplexModel';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MultiplexService } from 'src/app/services/http-services/multiplex-service/multiplex.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ScreenModel } from 'src/app/models/ScreenModel';\nimport { MessageDialogService } from 'src/app/services/utilty-services/dialog/message-dialog.service';\nimport { AllocateMovieDialogService } from 'src/app/services/http-services/allocate-movie-dialog/allocate-movie-dialog.service';\nimport { ConfirmMessageDialogService } from 'src/app/services/utilty-services/confirm-message-dialog/confirm-message-dialog.service';\n\n@Component({\n  selector: 'app-screen',\n  templateUrl: './screen.component.html',\n  styleUrls: ['./screen.component.css']\n})\nexport class ScreenComponent implements OnInit {\n\n  screenForm: FormGroup;\n\n  ELEMENT_DATA = new Array<ScreenModel>();\n  dataSource: any;\n  screenList: any;\n  multiplexId: string;\n  multiplexes: any;\n  selectedMultiplex: string;\n  newScreenAdded: any;\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  displayedColumns: string[] = [\n    //'screenId',\n    //'multiplexId',\n    'Commands',\n    'screenName',\n    'screenSize',\n    'totalSeat',\n    'movieDetail',\n    //'movieDetail',\n    'showStartDate',\n    'showEndDate'\n    //'isScreenAlive',\n    //'showAllocationDate',\n    //'showLastModified'\n  ]; \n\n\n  constructor(private formBuilder: FormBuilder, private multiPlexService: MultiplexService, private dialogService: MessageDialogService, private confirmMessageDialog: ConfirmMessageDialogService, private allocateMovieDialog: AllocateMovieDialogService) {\n    \n    this.validateForm();\n    this.loadMultiplexes(sessionStorage.getItem(\"userId\"));\n\n   }\n\n  ngOnInit(): void { \n  }\n\n  loadMultiplexes(userId: string){\n    this.multiPlexService.getAllMultiplexOfUser(userId).subscribe(\n      (success) => {\n        this.multiplexes = success;\n      },\n      (err) => {\n        alert(err.error.message);\n      }\n    );\n  }\n\n  validateForm(){\n    this.screenForm = this.formBuilder.group({\n      \"multiplexList\": new FormControl('', Validators.required),\n      \"screenName\": new FormControl('',Validators.required),\n      \"screenSize\": new FormControl(),\n      \"totalSeat\": new FormControl() \n    });\n  }\n\n  getMultiplex(mplex){ \n    this.selectedMultiplex = mplex.value;\n    this.loadData(this.selectedMultiplex);\n  }\n\n  addScreen(){\n    let screenModel: ScreenModel = new ScreenModel(\n      \"\",\n      this.selectedMultiplex,\n      this.screenForm.controls['screenName'].value,\n      this.screenForm.controls['screenSize'].value,\n      this.screenForm.controls['totalSeat'].value,\n      null,\n      null,\n      \"\", \n      \"\",\n      true,\n      \"\",\n      \"\"\n    );\n\n    this.multiPlexService.addScreen(screenModel).subscribe(\n      (success) => {\n        this.newScreenAdded = success;\n        this.loadData(this.selectedMultiplex); \n        let options = {\n          title: 'Screen Registration',\n          message1: \"Screen registered successfully!\",\n          message2: \"\",\n          cancelText: 'Ok',\n          confirmText: 'Ok'\n        };\n   \n        this.dialogService.open(options); \n      },\n      (err) => {\n        let options = {\n          title: 'Screen Registration',\n          message1: err.error.message,\n          message2: \"\",\n          cancelText: 'Ok',\n          confirmText: 'Ok'\n        };\n   \n        this.dialogService.open(options);\n      }\n    );\n  }\n\n  loadData(mplexId: string){ \n    this.multiPlexService.getAllMultiplexScreens(mplexId).subscribe(\n      (result) => {\n        this.screenList = result;  \n        this.parseElement();\n        this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n        this.dataSource.sort = this.sort; \n        this.dataSource.paginator = this.paginator;\n      },\n      (err) => {\n        alert(err.error.message);\n      }\n    );\n  }\n\n  parseElement(){ \n    var i = 0; \n    this.ELEMENT_DATA = new Array<ScreenModel>();\n    for(let data of this.screenList){ \n      this.ELEMENT_DATA[i] = (new ScreenModel(\n        data.screenId,\n        data.multiplexId,\n        data.screenName,\n        data.screenSize,\n        data.totalSeat,\n        data.movieId,\n        data.movieDetail,\n        data.showStartDate,\n        data.showEndDate,\n        data.isScreenAlive,\n        data.showAllocationDate,\n        data.showLastModified\n      ));\n        i++;\n    }\n\n  }\n\n  refreshList(){\n    this.loadMultiplexes(sessionStorage.getItem(\"userId\"));\n    this.loadData(this.selectedMultiplex);\n  }\n   \n   \n  addMovie(data){\n    this.editScren(data);\n  }\n  editScren(data){ \n    let screenModel = new ScreenModel(\n      data.screenId,\n      data.multiplexId,\n      data.screenName,\n      data.screenSize,\n      data.totalSeat,\n      data.movieId,\n      data.movieDetail,\n      data.showStartDate,\n      data.showEndDate,\n      data.isScreenAlive,\n      data.showAllocationDate,\n      data.showLastModified\n    );\n    \n    // Set screen data to send in dialog for edit\n    this.multiPlexService.clearScreenData();\n      this.multiPlexService.setScreenData(screenModel); \n\n      let options = {\n        title: 'Screen Edit',\n        message1: '',\n        message2: '',\n        cancelText: 'Cancel',\n        confirmText: 'Update',\n      };\n \n      this.allocateMovieDialog.open(options); \n\n      this.allocateMovieDialog.confirmed().subscribe(confirmed => {\n        //if (confirmed) { \n            // If updated reload data grid\n            this.refreshList();\n           // }\n      });\n  }\n  deleteScren(data){ \n    let options = {\n      title: 'Delete Screen',\n      message1: \"Screen will be deleted permanently!\",\n      message2: \"Do you really want to delete screen?\",\n      cancelText: 'Cancel',\n      confirmText: 'Delete'\n    };\n\n    this.confirmMessageDialog.open(options) \n    this.confirmMessageDialog.confirmed().subscribe(confirmed => { \n      if (confirmed) { \n          // Delete the record & refresh table list\n          this.multiPlexService.deleteScreen(data.screenId).subscribe(\n            (success) => {\n              this.refreshList();\n            },\n            (err) => {\n              alert(err.error.message);\n            }\n          );\n          \n     }\n    });\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n \n}\n","<div class=\"container\" style=\"max-height: 100%;\">  \n    \n    <div class=\"col-md-12\">&nbsp;</div>\n    <div class=\"col-md-12\" style=\"border-style: groove; padding: 10px; background-color:whitesmoke;\">\n    <form [formGroup]=\"screenForm\" (ngSubmit)=\"addScreen()\" > \n        <div class=\"row\"> \n            <div class=\"col-md-9\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Select multiplex</mat-label>\n                    <mat-select [formControl]=\"screenForm.controls['multiplexList']\" (selectionChange)=\"getMultiplex($event)\" required>\n                        <mat-option>None</mat-option>\n                        <mat-option *ngFor=\"let multiplex of multiplexes\" [value]=\"multiplex.multiplexId\" >{{multiplex.name}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"col-md-5\">\n                 \n                    <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                        <mat-label>Screen Name</mat-label>\n                        <input matInput placeholder=\"Screen Name\" [formControl]=\"screenForm.controls['screenName']\" [value]=\"screenForm.controls['screenName'].value | titlecase\" required/>\n                        <mat-error *ngIf=\"screenForm.controls['screenName'].hasError('required')\">\n                            Screen name is mandatory.\n                        </mat-error>\n                    </mat-form-field>  \n                \n            </div>\n            <div class=\"col-md-2\"> \n                <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                    <mat-label>Screen Size</mat-label>\n                    <input matInput type=\"number\" placeholder=\"Screen Size\" [formControl]=\"screenForm.controls['screenSize']\" />\n                </mat-form-field> \n            </div> \n            <div class=\"col-md-2\"> \n                <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                    <mat-label>Number of seats</mat-label>\n                    <input matInput type=\"number\" placeholder=\"Total number of seats\" [formControl]=\"screenForm.controls['totalSeat']\" />\n                </mat-form-field> \n            </div> \n     \n            \n            <div class=\"col-md-3\">\n                <span matTooltip=\"Fill registration form to enable\">\n                    <button type=\"submit\" mat-raised-button [disabled]=\"!screenForm.valid\">\n                    <mat-icon color=\"accent\">add</mat-icon>\n                    <span>Add screen</span>\n                    \n                    </button>\n                </span>\n                \n            </div> \n        </div>\n    </form>   \n    </div>  \n    <div class=\"col-md-12\"> &nbsp;</div> \n\n    <div class=\"row\">\n        <mat-form-field class=\"search-text-full-width\" appearance=\"outline\">  \n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search screen ...\" #input>\n            <mat-icon matPrefix color=\"accent\">search&nbsp;</mat-icon> \n        </mat-form-field> \n        <table mat-table [dataSource]=\"dataSource\" matSort>\n          \n        <ng-container matColumnDef=\"Commands\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\"> \n                     \n                </span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span>\n                    <span matTooltip=\"Add Movie\">\n                        <button type=\"button\" mat-icon-button (click)=\"addMovie(element)\">\n                            <mat-icon color=\"accent\">movie</mat-icon>\n                        </button> \n                    </span>\n                    <span matTooltip=\"Edit Screen\">\n                        <button type=\"button\" mat-icon-button (click)=\"editScren(element)\">\n                            <mat-icon color=\"accent\">edit</mat-icon>\n                        </button> \n                    </span>\n                    <span matTooltip=\"Delete screen\">\n                        <button type=\"button\" mat-icon-button (click)=\"deleteScren(element)\">\n                            <mat-icon color=\"accent\">delete</mat-icon>\n                        </button> \n                    </span>\n                </span>\n            </td>\n        </ng-container>\n         \n        <ng-container matColumnDef=\"screenName\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Screen Name </span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{element.screenName}} </span>\n            </td>\n        </ng-container> \n\n        <ng-container matColumnDef=\"screenSize\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Screen size</span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{element.screenSize}} </span>\n            </td>\n        </ng-container> \n\n        <ng-container matColumnDef=\"totalSeat\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Number of seats</span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{element.totalSeat}} </span>\n            </td>\n        </ng-container> \n\n        <ng-container matColumnDef=\"movieDetail\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Allotted Movie</span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{(element.movieDetail == null)?\"\":element.movieDetail.name}} </span>\n            </td> \n        </ng-container>\n\n        <ng-container matColumnDef=\"showStartDate\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Show Start Date </span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{element.showStartDate | date: 'mediumDate'}} </span>\n            </td>\n        </ng-container>\n         \n        <ng-container matColumnDef=\"showEndDate\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Show End Date</span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{element.showEndDate | date: 'mediumDate'}} </span>\n            </td>\n        </ng-container> \n        \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true;\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr> \n        \n        <!-- Row shown when there is no matching data. -->\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n        </tr>\n        </table>\n    </div> \n        \n        <mat-paginator [pageSizeOptions]=\"[5, 10, 25]\" showFirstLastButtons></mat-paginator>\n        <span matTooltip=\"Refresh List\">\n            <button type=\"button\" mat-icon-button (click)=\"refreshList()\">\n                <mat-icon color=\"accent\">refresh</mat-icon>\n            </button> \n        </span>\n        <br>\n        <br>  \n        \n</div> \n","import { Component, OnInit, Inject, HostListener } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UserService } from 'src/app/services/http-services/user-service/user.service';\nimport { UserModel } from 'src/app/models/UserModel';\n\n@Component({\n  selector: 'app-user-admin-dialog',\n  templateUrl: './user-admin-dialog.component.html',\n  styleUrls: ['./user-admin-dialog.component.css']\n})\nexport class UserAdminDialogComponent implements OnInit {\n\n  options: FormGroup; \n  message: string;\n  userObj: UserModel;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {\n    cancelText: string,\n    confirmText: string,\n    message1: string,\n    message2: string,\n    title: string\n  }, private formBuilder: FormBuilder, private mdDialogRef: MatDialogRef<UserAdminDialogComponent>, private userService: UserService) {\n    \n    this.userObj=   this.userService.getUserModel();\n    this.validateForm();\n  }\n\n  validateForm(){\n    this.options = this.formBuilder.group({\n      \"userControl\": new FormControl(this.userObj.userType, Validators.required)\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  public cancel() {\n    this.close(false);\n  }\n  public close(value) {\n    this.mdDialogRef.close(value);\n  }\n\n  public confirm() {\n    //To update user type in DB record\n    //Selected userType\n\n    let userType = this.options.controls['userControl'].value;\n     \n    if (userType != '') {\n      //set userType value in User intity\n      this.userObj.userType = userType;\n      //Call update service to update userType\n      this.userService.doModifyUser(this.userObj).subscribe(\n        (success) => {\n          this.message = \"User Type updated successfully!\"\n        },\n        (err) => {\n          this.message = \"User Type could not be updated. \"+err.error.message;\n        }\n      );\n      this.close(true);\n    } else {\n      this.message = \"Kindly select User Type to update.\"\n      return false;\n    }\n  }\n  @HostListener(\"keydown.esc\")\n  public onEsc() {\n    this.close(false);\n  }\n\n  cleanMessage() {\n    this.message = \"\";\n  }\n\n}\n"," \n<div class=\"col-md-12\"> \n  <mat-card class=\"header\"> \n       <h3>{{data.title}}</h3>\n  </mat-card> \n</div>\n<hr/>\n<div mat-dialog-content style=\"height: 100px;\">\n    <form class=\"container\" [formGroup]=\"options\"  (submit)=\"cleanMessage()\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>User Type</mat-label>\n          <mat-select [formControl]=\"options.controls['userControl']\">\n            <mat-option value=\"GENERAL\">GENERAL</mat-option>\n            <mat-option value=\"ADMIN\">ADMIN</mat-option>\n            <mat-option value=\"SUPER_USER\">SUPER_USER</mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"options.controls['userControl'].touched\">You have not selected User Type!</mat-error>\n        </mat-form-field> \n      </form>\n      <mat-error>{{message}}</mat-error>\n</div>\n\n<div mat-dialog-actions>\n    <button mat-raised-button [disabled]=\"!(options.dirty && options.valid)\" (click)=\"confirm()\">{{ data.confirmText }}</button>\n    <button mat-raised-button (click)=\"cancel()\">{{ data.cancelText }}</button> \n</div> ","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { UserModel } from 'src/app/models/UserModel';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { UserAdminDialogComponent } from './user-admin-dialog/user-admin-dialog.component';\nimport { UserAdminDialogService } from 'src/app/services/http-services/user-admin-dialog/user-admin-dialog.service';\nimport { UserService } from 'src/app/services/http-services/user-service/user.service';\nimport { Observable } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  usersList: any;\n  displayedColumns: string[] = [\n       // 'userId',\n        'firstName',\n        'lastName',\n        'gender',\n        'dob',\n        //'age',\n        'email',\n        'mobile',\n        //'password',\n        'location',\n        'userType',\n        'isAlive',\n        //'mPlexList',\n        'profileCreationTimeStamp',\n        'profileLastModifiedTimeStamp'\n      ]; \n  ELEMENT_DATA = new Array<UserModel>();\n  dataSource: any;\n/* code for data list\n  myControl = new FormControl();\n  options: any =[];\n  filteredOptions: Observable<any[]>;\n*/\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  constructor(private userService: UserService, private userAdminDialog: UserAdminDialogService) { \n    //this.loadData();\n     \n    \n  }\n\n  ngOnInit(): void {\n    \n  } \n\n  ngAfterViewInit(){ \n    this.loadData(); \n  }\n\n  /* code for data list\n  autoCom(){\n    alert(this.options);\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    \n    return this.options.filter(option => { \n      option.toLowerCase().indexOf(filterValue) === 0 \n    }); \n  }\n */\n\n  loadData(){\n    this.userService.getAllUserList().subscribe(\n      (result) => {\n      this.usersList = result;   \n      this.parseElement();\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n      this.dataSource.sort = this.sort; \n      this.dataSource.paginator = this.paginator;\n    },\n    (err) => {\n      alert(err.error.message);\n    } \n    );\n    \n  }\n\n  parseElement(){ \n    var i = 0; \n    for(let data of this.usersList){ \n      this.ELEMENT_DATA[i] = (new UserModel(\n        data.userId,\n        data.firstName,\n        data.lastName,\n        data.gender,\n        data.dob,\n        data.age,\n        data.email,\n        data.mobile,\n        data.password,\n        data.location,\n        data.userType, \n        data.isAlive,\n        null,//data.mPlexList,\n        data.profileCreationTimeStamp,\n        data.profileLastModifiedTimeStamp\n      ));\n\n        //this.options.push((data.userId==undefined)?\"\":data.userId);\n       // this.options.push(((data.firstName==undefined)?\" \":data.firstName));\n        //this.options.push(data.lastName==undefined?\" \":data.lastName);\n        //this.options.push(data.gender);\n        //this.options.push(data.dob);\n        //this.options.push(data.age);\n        //this.options.push(data.email);\n        //this.options.push(data.mobile);\n        \n        //this.options.push(data.location);\n        //this.options.push(data.userType);\n        //this.options.push(data.isAlive);\n         \n        //this.options.push(data.profileCreationTimeStamp);\n        //this.options.push(data.profileLastModifiedTimeStamp);\n      \n      //let obj:any = JSON.parse(data);  \n      //for(var j in obj) \n        // this.options.push(obj[j+1]); \n\n        i++;\n        \n        \n        \n        //this.getBoxes(data); \n        //alert(JSON.stringify(data));\n        //alert(obj);\n        \n    } \n   // this.autoCom();\n  }\n  getRecord(row){ \n    let userObj: UserModel = new UserModel(\n        row.userId,\n        row.firstName,\n        row.lastName,\n        row.gender,\n        row.dob,\n        row.age,\n        row.email,\n        row.mobile,\n        row.password,\n        row.location,\n        row.userType,\n        row.isAlive,\n        row.mPlexList,\n        row.profileCreationTimeStamp,\n        row.profileLastModifiedTimeStamp\n      ); \n      this.userService.addUserModel(userObj);\n      let options = {\n        title: 'User Type Modification for '+row.firstName+' '+row.lastName,\n        message1: row.userId,\n        message2: '',\n        cancelText: 'Cancel',\n        confirmText: 'Update',\n      };\n \n      this.userAdminDialog.open(options);\n      \n      this.userAdminDialog.confirmed().subscribe(confirmed => {\n        if (confirmed) { \n            // If updated reload data grid\n            this.loadData();\n           }\n        });\n      } \n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value; \n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","<div class=\"table-container\">\n    <div class=\"col-md-12\"> \n        <mat-card class=\"header\"> \n             <mat-card-title>User Authentication</mat-card-title>  \n        </mat-card> \n     </div>\n     <div class=\"col-md-12\"> \n    <mat-form-field class=\"search-text-full-width\" appearance=\"outline\">\n        <mat-label>Filter</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search screen ...\" #input>\n        <mat-icon matPrefix color=\"accent\">search&nbsp;</mat-icon>\n         \n    </mat-form-field>\n    <div class=\"overflw\">\n        <div class=\"table-container\">\n            <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z0\" matSort>\n\n                <!-- Name Column -->\n                <ng-container matColumnDef=\"firstName\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                        <span class=\"header-text\">First Name</span>\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <span class=\"truncate-text\">{{element.firstName}}</span>\n                    </td>\n                </ng-container>\n\n                <!-- Weight Column -->\n                <ng-container matColumnDef=\"lastName\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                        <span class=\"header-text\">Last Name </span>\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <span class=\"truncate-text\">{{element.lastName}}</span>\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"gender\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                        <span class=\"header-text\">Gender</span>\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <span class=\"truncate-text\">{{element.gender}} </span>\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"dob\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                        <span class=\"header-text\">Date Of Birth </span>\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <span class=\"truncate-text\">{{element.dob | date: 'mediumDate'}} </span>\n                    </td>\n                </ng-container>\n\n                <!-- Symbol Column -->\n                <ng-container matColumnDef=\"email\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                        <span class=\"header-text\">Email </span>\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <span class=\"truncate-text\">{{element.email}}</span>\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"mobile\">\n                    <th mat-header-cell *matHeaderCellDef>\n                        <span class=\"header-text\">Mobile </span>\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <span class=\"truncate-text\">{{element.mobile}}</span>\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"location\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                        <span class=\"header-text\">Location</span>\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <span class=\"truncate-text\">{{element.location}}</span>\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"userType\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                        <span class=\"header-text\">User Type </span>\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <span class=\"truncate-text\">{{element.userType}} </span>\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"isAlive\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                        <span class=\"header-text\">Active </span>\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <span class=\"truncate-text\">{{element.isAlive}} </span>\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"profileCreationTimeStamp\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                        <span class=\"header-text\">Profile Created On</span>\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <span class=\"truncate-text\">{{element.profileCreationTimeStamp | date: 'full'}}</span>\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"profileLastModifiedTimeStamp\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                        <span class=\"header-text\">Last Modified </span>\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <span class=\"truncate-text\">{{element.profileLastModifiedTimeStamp | date: 'full'}}</span>\n                    </td>\n                </ng-container>\n\n\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true;\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"getRecord(row)\"></tr>\n\n            </table>\n        </div>\n    </div>\n    </div>\n    <div class=\"col-md-12\">\n        <mat-paginator [pageSizeOptions]=\"[10, 25, 50]\" showFirstLastButtons></mat-paginator>\n    </div>\n    <div class=\"col-md-12\">&nbsp;</div>\n    <br>\n    <br>\n    <br>\n</div>","import { Component, OnInit } from '@angular/core'; \nimport { UserService } from 'src/app/services/http-services/user-service/user.service';\nimport { UserEditService } from 'src/app/services/http-services/user-service/user-edit.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  userData: any;\n\n  constructor(private userService: UserService, private userEdit: UserEditService) { \n     \n  }\n\n  ngOnInit(): void {\n    this.loadUserProfile();\n  }\n\n  loadUserProfile(){\n    this.userService.getUserDetail(sessionStorage.getItem(\"userId\")).subscribe(\n      (data) => {\n        this.userData = data; \n        this.userService.clearUserData();\n        this.userService.addUserData(this.userData); \n      }\n    );\n  }\n\n  openUserEditDialog(){\n    let options = {\n      title: 'Movieplex User Update',\n      message1: \"Jai Ram G Ki\",\n      message2: \"\",\n      cancelText: 'Ok',\n      confirmText: 'Ok'\n    };\n\n    this.userEdit.open(options); \n    this.userEdit.confirmed().subscribe(confirmed => {\n      //if (confirmed) {  \n          // If updated reload data grid\n          this.refreshProfile();\n       //}\n    });\n  }\n\n  refreshProfile(){\n    this.loadUserProfile();\n  }\n   \n}\n","<div class=\"container\">\n    <div class=\"row  row-appear large-box \" style=\"width: 100%;\">\n        <div class=\"col-md-12\"> \n           <mat-card class=\"header\"> \n                <mat-card-title>User Profile</mat-card-title>  \n           </mat-card> \n        </div>\n        <div class=\"col-md-12\">&nbsp;</div>\n        <div class=\"col-md-6\">\n            <mat-card-title>First Name</mat-card-title>\n            <mat-card-subtitle>{{(userData != undefined)?userData.firstName:\"\"}}</mat-card-subtitle>\n        </div>\n        <div class=\"col-md-6\">\n            <mat-card-title>Last Name</mat-card-title>\n            <mat-card-subtitle>{{(userData != undefined)?userData.lastName:\"\"}}</mat-card-subtitle>\n        </div>\n          \n        <div class=\"col-md-6\">\n            <mat-card-title>Gender</mat-card-title>\n            <mat-card-subtitle>{{(userData != undefined)?userData.gender:\"\"}}</mat-card-subtitle>\n        </div>\n        <div class=\"col-md-6\">\n            <mat-card-title>Date of Birth</mat-card-title>\n            <mat-card-subtitle>{{(userData != undefined)?(userData.dob | date: 'fullDate'):\"\"}}</mat-card-subtitle>\n        </div> \n\n\n        <div class=\"col-md-6\">\n            <mat-card-title>Email</mat-card-title>\n            <mat-card-subtitle>{{(userData != undefined)?userData.email:\"\"}}</mat-card-subtitle>\n        </div> \n        <div class=\"col-md-6\">\n            <mat-card-title>Mobile</mat-card-title>\n            <mat-card-subtitle>{{(userData != undefined)?userData.mobile:\"\"}}</mat-card-subtitle>\n        </div>\n          \n        <div class=\"col-md-12\">\n            <mat-card-title>Location</mat-card-title> \n            <mat-card-subtitle>{{(userData != undefined)?userData.location:\"\"}}</mat-card-subtitle>\n        </div>\n\n        \n        <br>\n        <hr style=\"width: 100%; background-color: rgb(3, 175, 243);\">\n        <br>\n          \n        <div class=\"row col-md-12\"  style=\"align-content: left;\">\n            <span matTooltip=\"Edit Profile\">\n            <button type=\"button\" mat-raised-button (click)=\"openUserEditDialog()\">\n            <mat-icon color=\"accent\">edit</mat-icon>\n            <span>Edit</span>\n            \n            </button>\n            </span> \n            <span style=\"width: 10px;\"></span>\n            <mat-card-title>\n                <span matTooltip=\"Refresh Profile\">\n                    <button type=\"button\" mat-icon-button (click)=\"refreshProfile()\">\n                        <mat-icon color=\"accent\">refresh</mat-icon>\n                    </button> \n                </span>\n            </mat-card-title>\n        </div> \n        <div class=\"col-md-12\">\n            <mat-card-subtitle>&nbsp;</mat-card-subtitle>\n        </div>\n    </div>\n</div>","\nimport { NativeDateAdapter, DateAdapter,MAT_DATE_FORMATS } from '@angular/material/core';\nimport { formatDate } from '@angular/common';  \nimport { Injectable } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n/*import * as moment from \"moment\";*/\nexport const PICK_FORMATS = {\n    parse: {dateInput: {month: 'short', year: 'numeric', day: 'numeric'}},\n    display: {\n        dateInput: 'input',\n        monthYearLabel: {year: 'numeric', month: 'short'},\n        dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n        monthYearA11yLabel: {year: 'numeric', month: 'long'}\n    }\n};\n@Injectable({\n    providedIn: 'root'\n})\nexport class PickDateAdapter extends NativeDateAdapter {\n     \n    format(date: Date, displayFormat: Object): string {\n        if (displayFormat === 'input') {\n            return formatDate(date,'dd-MM-yyyy',this.locale);;\n        } else {\n            return date.toDateString();\n        }\n    }\n  }\n\n  export function DateValidator(format = \"dd-MM-YYYY\"): any {\n    return (control: FormControl): { [key: string]: any } => {\n     /* const val = moment(control.value, format, true);\n  \n      if (!val.isValid()) {\n        return { invalidDate: true };\n      }\n      */\n      return null;\n    };\n  }","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { NativeDateAdapter, DateAdapter,MAT_DATE_FORMATS } from '@angular/material/core';\nimport { PickDateAdapter, PICK_FORMATS, DateValidator } from './PickDateAdapter';\nimport { RegisterService } from 'src/app/services/http-services/register-service/register.service';\nimport { MessageDialogService } from 'src/app/services/utilty-services/dialog/message-dialog.service';\nimport { UserModel } from 'src/app/models/UserModel';\n \n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n  providers: [\n    {provide: DateAdapter, useClass: PickDateAdapter},\n    {provide: MAT_DATE_FORMATS, useValue: PICK_FORMATS}\n]\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup; \n  registrationGreetings: any; \n\n  constructor(private formBuilder: FormBuilder, private registerService: RegisterService, private dialogService: MessageDialogService) { \n    this.validateForm();\n  }\n\n  ngOnInit(): void {\n  }\n\n  validateForm(){\n    this.registerForm = this.formBuilder.group({\n      \"firstName\": new FormControl('',Validators.required),\n      \"lastName\": new FormControl(),\n      \"gender\": new FormControl('Male', Validators.required),\n      \"dob\": new FormControl('', [Validators.required, DateValidator()]),\n      \"email\": new FormControl('', [Validators.email, Validators.required]),\n      \"password\": new FormControl('',[Validators.minLength(3), Validators.required]),\n      \"mobile\": new FormControl(),\n      \"location\": new FormControl()\n    });\n  }\n\n  // code segments for password hide/show functionality starts\n  hide:boolean = true;\n  get emailInput() { \n    return this.registerForm.controls['email'].value;\n  }\n\n  get passwordInput() { \n    return this.registerForm.controls['password'].value; \n  } \n  // code segments for password hide/show functionality ends\n\n  doRegister(){\n    //alert(\"Jai Ram G ki\");\n    /*let values = {\n      userId:\"\",\n      firstName:this.registerForm.controls['firstName'].value,\n      lastName:this.registerForm.controls['lastName'].value,\n      gender:this.registerForm.controls['gender'].value,\n      dob:this.registerForm.controls['dob'].value,\n      email:this.registerForm.controls['email'].value,\n      password:this.registerForm.controls['password'].value,\n      mobile:this.registerForm.controls['mobile'].value,\n      location:this.registerForm.controls['location'].value\n    };*/\n    //var date = values.dob.getFullYear()+'-'+(values.dob.getMonth()+1)+'-'+values.dob.getDate();\n    //var date = values.dob.getDate()+'-'+(values.dob.getMonth()+1)+'-'+values.dob.getFullYear();\n   // values.dob = this.dateFormater(values.dob);\n    //alert(JSON.stringify(values)); \n\n    let values: UserModel = new UserModel(\n        \"\", //initally userId should be null, will be generated by user API\n        this.registerForm.controls['firstName'].value,\n        this.registerForm.controls['lastName'].value,\n        this.registerForm.controls['gender'].value,\n        this.registerForm.controls['dob'].value,\n        \"0\",\n        this.registerForm.controls['email'].value,\n        this.registerForm.controls['mobile'].value,\n        this.registerForm.controls['password'].value,\n        this.registerForm.controls['location'].value,\n        \"GENERAL\", \n        \"true\",\n        null,//data.mPlexList,\n        \"\", //create tstamp - will be generated by API\n        \"\"  //update tstamp - will be generated by API\n    );\n    this.registerService.registerUser(values).subscribe(\n      (success) => {\n        //return message \n      this.registrationGreetings = success; \n      this.registrationGreetings = \"Welcome \"+this.registrationGreetings.firstName+\" \"+this.registrationGreetings.lastName+\"!\";\n      \n      let options = {\n        title: 'Registration',\n        message1: this.registrationGreetings,\n        message2: \"Now login and book Movie!!\",\n        cancelText: 'Ok',\n        confirmText: 'Ok'\n      };\n \n      this.dialogService.open(options);\n      \n      this.dialogService.confirmed().subscribe(confirmed => {\n        if (confirmed) {\n             //alert(\"Jai Ram G ki\");\n             //After clicking Ok on message dialog, form should reset\n             this.registerForm.reset();\n           }\n         });\n      },//end of success\n      (err) => { \n        let options = {\n          title: 'Movieplex Registration',\n          message1: err.error.message,\n          message2: \"\",\n          cancelText: 'Ok',\n          confirmText: 'Ok'\n        };\n   \n        this.dialogService.open(options);\n        \n        this.dialogService.confirmed().subscribe(confirmed => {\n          if (confirmed) {\n               //alert(\"Jai Ram G ki\");\n               //After clicking Ok on message dialog, form should reset\n               this.registerForm.controls.email.reset();\n             }\n           });\n        \n      }\n    );\n  }\n\n  dateFormater(date:string):string{    \n    const today = new Date(date);        \n    const day = today.getDate(); \n    const month = today.getMonth()+1;\n    const year = today.getFullYear();\n \n    return year + \"-\" + (month<10 ? (\"0\" + month) : month)+ \"-\" + (day<10 ? (\"0\" + day) : day);    \n  }\n\n  \n}\n","<div class=\"container\">\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"doRegister()\">\n      <div class=\"row large-box mat-elevation-z3\" style=\"width: 100%;\">\n        <mat-card class=\"header\"> \n          <mat-card-title>Register</mat-card-title>  \n        </mat-card> \n          <div class=\"col-md-6\">\n            \n                  <p>\n                  <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                    <mat-label>First Name</mat-label>\n                    <input matInput placeholder=\"First Name\" name=\"firstName\" [formControl]=\"registerForm.controls['firstName']\" [value]=\"registerForm.controls['firstName'].value | titlecase\" required/>\n                    <mat-error *ngIf=\"registerForm.controls['firstName'].hasError('required')\">\n                        <strong>First</strong> name is mandatory.\n                    </mat-error>\n                  </mat-form-field> \n                  </p>\n            \n          </div>\n          <div class=\"col-md-6\">\n            \n                  <p>\n                  <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                    <mat-label>Last Name</mat-label>\n                    <input matInput placeholder=\"Last Name\" name = \"lastName\" [formControl]=\"registerForm.controls['lastName']\" />\n                  </mat-form-field>\n                  </p>\n            \n          </div>\n\n          <div class=\"col-md-6\">   \n            <section class=\"radio-section\">\n                <label class=\"radio-margin\">Gender:</label>\n                <mat-radio-group aria-label=\"Select Gender\" fxLayout=\"column\" [formControl]=\"registerForm.controls['gender']\" >\n                 \n                    <mat-radio-button value=\"Male\">Male</mat-radio-button>\n                    <mat-radio-button value=\"Female\">Female</mat-radio-button>\n                    <mat-radio-button value=\"Others\">Others</mat-radio-button> \n                     \n                </mat-radio-group>  \n            </section>\n          </div>\n\n          <div class=\"col-md-6\"> \n            <p>\n                <mat-form-field appearance=\"standard\" class=\"text-full-width\">\n                    <mat-label>Date of Birth</mat-label>\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"dd-Mon-yyyy\" [formControl]=\"registerForm.controls['dob']\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker color=\"accent\"></mat-datepicker>\n\n                    <mat-error *ngIf=\"registerForm.controls['dob'].hasError('required')\">\n                        Date of Birth is mandatory.\n                    </mat-error>\n                    <mat-error *ngIf=\"registerForm.controls['dob'].hasError('datevalidator')\">\n                        Invalid Date.\n                    </mat-error>\n                </mat-form-field>\n            </p>\n          </div>\n          <div class=\"col-md-4\">\n            \n              <p>\n              <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                <mat-label>Email</mat-label>\n                <input matInput placeholder=\"Email\" name = \"email\" [formControl] = \"registerForm.controls['email']\" required />\n                <mat-error *ngIf=\"registerForm.controls['email'].hasError('required')\">\n                    Email Required!\n                </mat-error>\n             \n                <mat-error *ngIf=\"registerForm.controls['email'].hasError('email') && registerForm.controls['email'].dirty\">\n                    Invalid email.\n                </mat-error>\n            </mat-form-field>\n              </p>\n  \n          </div>\n          <div class=\"col-md-4\">\n            \n            <p>\n            <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n              <mat-label>Password</mat-label>\n              <input matInput placeholder=\"Password\" [type]=\"hide ? 'password' : 'text'\" name = \"password_\" [formControl]=\"registerForm.controls['password']\" required />\n              <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n              <mat-error *ngIf=\"registerForm.controls['password'].hasError('required')\">Password required!</mat-error>\n              <mat-error *ngIf=\"registerForm.controls['password'].hasError('minlength')\">\n               Password should be in minimum 3 charchater \n              </mat-error>\n            </mat-form-field>\n            </p>\n  \n          </div>\n  \n          <div class=\"col-md-4\">\n            \n            <p>\n            <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n              <mat-label>Mobile</mat-label>\n              <input matInput placeholder=\"Mobile\" [formControl]=\"registerForm.controls['mobile']\"/>\n            </mat-form-field>\n            </p>\n  \n          </div>\n  \n          <div class=\"col-md-12\">\n            \n            <p>\n            <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n              <mat-label>Location</mat-label>\n              <input matInput placeholder=\"Location\" name = \"location\" [formControl] = \"registerForm.controls['location']\"/>\n            </mat-form-field>\n            </p>\n  \n          </div>\n  \n          <div class=\"col-md-12\"  style=\"align-content: left;\">\n            <span matTooltip=\"Fill registration form to enable\">\n            <button type=\"submit\" mat-raised-button [disabled]=\"!registerForm.valid\">\n              <mat-icon color=\"accent\">person</mat-icon>\n              <span>Register</span>\n              \n            </button>\n            </span>\n            <span>&nbsp;<a color=\"accent\" mat-button href=\"www.google.com\">Reset password?</a></span>\n          </div>\n   \n          <div class=\"col-md-12\"  style=\"align-content: center;\">\n            &nbsp;\n          </div>\n     </div>\n   \n   </form>\n  </div>\n  \n    \n        \n  ","import { Component, OnInit } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { PickDateAdapter, PICK_FORMATS, DateValidator } from '../register/PickDateAdapter';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UserService } from 'src/app/services/http-services/user-service/user.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MessageDialogService } from 'src/app/services/utilty-services/dialog/message-dialog.service';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css'],\n  providers: [\n    {provide: DateAdapter, useClass: PickDateAdapter},\n    {provide: MAT_DATE_FORMATS, useValue: PICK_FORMATS}\n]\n})\nexport class UserEditComponent implements OnInit {\n\n  userEditForm: FormGroup;   \n  userData: any;\n  isUserCanceled: boolean;\n  updateInfo: string;\n\n  constructor(private formBuilder: FormBuilder, private userService: UserService, private mdDialogRef: MatDialogRef<UserEditComponent>) {  \n    \n  }\n\n  ngOnInit(): void {\n    \n    this.userData = this.userService.getUserData();  \n    this.validateForm(); \n\n  }\n\n  validateForm(){\n    this.userEditForm = this.formBuilder.group({\n      \"firstName\": new FormControl(this.userData[0].firstName,Validators.required),\n      \"lastName\": new FormControl(this.userData[0].lastName),\n      \"gender\": new FormControl(this.userData[0].gender, Validators.required),\n      \"dob\": new FormControl(this.userData[0].dob, [Validators.required]),\n      \"email\": new FormControl(this.userData[0].email), \n      \"mobile\": new FormControl(this.userData[0].mobile),\n      \"location\": new FormControl(this.userData[0].location)\n    });\n  }\n\n  public cancel() {\n    this.isUserCanceled = true;\n    this.mdDialogRef.close(false);\n  }\n   \n  doUpdate(){\n    //alert(\"Jai Ram G ki\");\n    let values = {\n      userId:this.userData[0].userId,\n      firstName:this.userEditForm.controls['firstName'].value,\n      lastName:this.userEditForm.controls['lastName'].value,\n      gender:this.userEditForm.controls['gender'].value,\n      dob:this.userEditForm.controls['dob'].value,\n      email:this.userEditForm.controls['email'].value, \n      mobile:this.userEditForm.controls['mobile'].value,\n      location:this.userEditForm.controls['location'].value\n    }; \n    \n   if(!this.isUserCanceled){\n      this.userService.doModifyUser(values).subscribe(\n        (success) => {\n          this.updateInfo = \"Record updated successfully!\";\n            \n        },\n        (err) => {\n          this.updateInfo = err.error.message; \n        }\n      ); \n   } \n  }\n\n  dateFormater(date:string):string{    \n    const today = new Date(date);        \n    const day = today.getDate(); \n    const month = today.getMonth()+1;\n    const year = today.getFullYear();\n \n    return year + \"-\" + (month<10 ? (\"0\" + month) : month)+ \"-\" + (day<10 ? (\"0\" + day) : day);    \n  }\n\n\n}\n","<div class=\"container\">\n    <form [formGroup]=\"userEditForm\" (ngSubmit)=\"doUpdate()\">\n      <div class=\"row large-box\" style=\"width: 100%;\">\n        <div class=\"col-md-12\"> \n          <mat-card class=\"header\"> \n               <mat-card-title>User Profile Update</mat-card-title>  \n          </mat-card> \n       </div>\n       <div class=\"col-md-12\">&nbsp;</div>\n          <div class=\"col-md-6\">\n            \n                  <p>\n                  <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                    <mat-label>First Name</mat-label>\n                    <input matInput placeholder=\"First Name\" [formControl]=\"userEditForm.controls['firstName']\" [value]=\"userEditForm.controls['firstName'].value | titlecase\" required/>\n                    <mat-error *ngIf=\"userEditForm.controls['firstName'].hasError('required')\">\n                        <strong>First</strong> name is mandatory.\n                    </mat-error>\n                  </mat-form-field> \n                  </p>\n            \n          </div>\n          <div class=\"col-md-6\">\n            \n                  <p>\n                  <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                    <mat-label>Last Name</mat-label>\n                    <input matInput placeholder=\"Last Name\" name = \"lastName\" [formControl]=\"userEditForm.controls['lastName']\" />\n                  </mat-form-field>\n                  </p>\n            \n          </div>\n\n          <div class=\"col-md-6\">   \n            <section class=\"radio-section\">\n                <label class=\"radio-margin\">Gender:</label>\n                <mat-radio-group aria-label=\"Select Gender\" fxLayout=\"column\" [formControl]=\"userEditForm.controls['gender']\" >\n                 \n                    <mat-radio-button value=\"Male\">Male</mat-radio-button>\n                    <mat-radio-button value=\"Female\">Female</mat-radio-button>\n                    <mat-radio-button value=\"Others\">Others</mat-radio-button> \n                     \n                </mat-radio-group>  \n            </section>\n          </div>\n\n          <div class=\"col-md-6\"> \n            <p>\n                <mat-form-field appearance=\"standard\" class=\"text-full-width\">\n                    <mat-label>Date of Birth</mat-label>\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"dd-Mon-yyyy\" [formControl]=\"userEditForm.controls['dob']\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker color=\"accent\"></mat-datepicker>\n\n                    <mat-error *ngIf=\"userEditForm.controls['dob'].hasError('required')\">\n                        Date of Birth is mandatory.\n                    </mat-error>\n                    <mat-error *ngIf=\"userEditForm.controls['dob'].hasError('datevalidator')\">\n                        Invalid Date.\n                    </mat-error>\n                </mat-form-field>\n            </p>\n          </div>\n          <div class=\"col-md-6\">\n            \n              <p> \n                  <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                    <mat-label>Email</mat-label> \n                    <input matInput placeholder=\"Email\" name = \"email\" [formControl] = \"userEditForm.controls['email']\"/>\n                  </mat-form-field> \n              <p>\n  \n          </div>\n           \n          <div class=\"col-md-6\">\n            \n            <p>\n            <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n              <mat-label>Mobile</mat-label>\n              <input matInput placeholder=\"Mobile\" [formControl]=\"userEditForm.controls['mobile']\"/>\n            </mat-form-field>\n            </p>\n  \n          </div>\n  \n          <div class=\"col-md-12\">\n            \n            <p>\n            <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n              <mat-label>Location</mat-label>\n              <input matInput placeholder=\"Location\" name = \"location\" [formControl] = \"userEditForm.controls['location']\"/>\n            </mat-form-field>\n            </p>\n  \n          </div>\n  \n          <div class=\"col-md-12\"  style=\"align-content: center;\">\n            &nbsp;<mat-hint>{{updateInfo}}</mat-hint>\n          </div>\n          <div class=\"col-md-12\"  style=\"align-content: center;\">\n            &nbsp;\n          </div>\n\n          <div class=\"col-md-12\"  style=\"align-content: left;\">\n            <span matTooltip=\"Fill registration form to enable\">\n            <button type=\"submit\" mat-raised-button [disabled]=\"!(userEditForm.dirty && userEditForm.valid)\">\n              <mat-icon color=\"accent\">update</mat-icon>\n              <span>Update</span>\n              \n            </button>\n            </span> &nbsp;\n            <span matTooltip=\"Cancel\">\n              <button mat-raised-button (click)=\"cancel()\">\n                <mat-icon color=\"accent\">close</mat-icon>\n                <span>Close</span>\n                \n              </button>\n              </span>\n            <span>&nbsp;<a color=\"accent\" mat-button href=\"www.google.com\">Reset password?</a></span>\n          </div>\n   \n          <div class=\"col-md-12\"  style=\"align-content: center;\">\n            &nbsp;\n          </div>\n     </div> \n   </form>\n  </div>\n  \n    \n        \n  ","import { Component, OnInit, Inject, HostListener } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { RegisterService } from 'src/app/services/http-services/register-service/register.service';\nimport { Observable } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-confirm-message-dialog',\n  templateUrl: './confirm-message-dialog.component.html',\n  styleUrls: ['./confirm-message-dialog.component.css']\n})\nexport class ConfirmMessageDialogComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {\n    cancelText: string,\n    confirmText: string,\n    message1: string,\n    message2: string,\n    title: string \n  }, private mdDialogRef: MatDialogRef<ConfirmMessageDialogComponent>) { \n    \n  } \n\n  ngOnInit(): void {\n  }\n \n  public cancel() {  \n    this.close(false);\n  }\n  public close(value) {  \n    this.mdDialogRef.close(value);\n  }\n  \n  public confirm() {  \n    this.close(true);\n  }\n  \n@HostListener(\"keydown.esc\")\n  public onEsc() { \n    this.close(false);\n  }  \n}\n","\n<div class=\"header\" style=\"width: 400px;\">\n    <h1 mat-dialog-title>{{data.title}}</h1>\n</div>\n<hr/>\n<div mat-dialog-content style=\"height: 100px;\">\n   \n      <span style=\"color: red; margin-left: 18px;\">{{data.message1}}</span>\n      <br><br>\n      <span style=\"margin-left: 18px;\">{{data.message2}}</span>\n</div>\n\n<div mat-dialog-actions>\n    \n    <button mat-raised-button (click)=\"confirm()\">{{ data.confirmText }}</button>\n    <button mat-raised-button (click)=\"cancel()\">{{ data.cancelText }}</button>\n     \n</div> ","import { Component, OnInit } from '@angular/core';\nimport { Inject, Output, HostListener, ChangeDetectionStrategy } from '@angular/core'; \nimport {MatDialog} from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n@Component({\n  selector: 'app-message-dialog',\n  templateUrl: './message-dialog.component.html',\n  styleUrls: ['./message-dialog.component.css']\n})\nexport class MessageDialogComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {\n    cancelText: string, \n    confirmText: string,\n    message1: string,\n    message2: string,\n    title: string\n  }, private mdDialogRef: MatDialogRef<MessageDialogComponent>) { }\n\n  ngOnInit(): void {\n  } \n  public cancel() {\n    this.close(false);\n  }\n  public close(value) {\n    this.mdDialogRef.close(value);\n  }\npublic confirm() {\n    this.close(true);\n}\n@HostListener(\"keydown.esc\")\n  public onEsc() {\n    this.close(false);\n  }\n\n}\n","<div class=\"header\">\n    <h1 mat-dialog-title>{{ data.title }}</h1>\n</div>\n<hr/>\n<div mat-dialog-content>\n    <p class=\"dialog-message\" style=\"color: red;\">{{ data.message1 }}</p> \n    <p>&nbsp;</p>\n    <p class=\"dialog-message\">{{ data.message2 }}</p> \n</div>\n\n<div mat-dialog-actions>\n    <!--\n    <button mat-raised-button (click)=\"cancel()\">{{ data.cancelText }}</button>\n    <button class=\"btn\" (click)=\"confirm()\">{{ data.confirmText }}</button>\n    -->\n    <button mat-raised-button (click)=\"confirm()\">Ok</button>\n</div> \n \n","import { Component, OnInit, Input, HostListener, ElementRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: FileUploadComponent,\n      multi: true\n    }\n  ]\n})\nexport class FileUploadComponent {\n\n  @Input() progress; \n  onChange: Function;\n   file: File | null = null;\n\n  @HostListener('change', ['$event.target.files']) emitFiles( event: FileList ) {\n    const file = event && event.item(0);\n    this.onChange(file);\n    this.file = file;\n  }\n\n  constructor(private host: ElementRef<HTMLInputElement>) { }\n\n  writeValue( value: null ) {\n    // clear file input\n    this.host.nativeElement.value = '';\n    this.file = null;\n  }\n\n  registerOnChange( fn: Function ) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched( fn: Function ) {\n  }\n\n}\n","<div>\n    <span>Choose Movie Poster file  &nbsp; &nbsp;</span>\n    <span style=\"display: none;\">{{file ? file.name : 'or drag and drop file here' }}</span>\n    <input class=\"file-input\" type=\"file\">  \n     \n  </div>\n  \n <!-- <app-progress [progress]=\"progress\"></app-progress>-->","export function toFormData<T>( formValue: T ) {\n    const formData = new FormData();\n  \n    for ( const key of Object.keys(formValue) ) {\n      const value = formValue[key];\n      formData.append(key, value);\n    }\n  \n    return formData;\n  }","import { pipe } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { HttpEvent, HttpEventType, HttpResponse } from '@angular/common/http';\n\nexport function toResponseBody<T>() {\n    return pipe(\n      filter(( event: HttpEvent<T> ) => event.type === HttpEventType.Response),\n      map(( res: HttpResponse<T> ) => res.body)\n    );\n  }","import { tap } from 'rxjs/operators';\nimport { HttpEventType, HttpEvent } from '@angular/common/http';\n\nexport function uploadProgress<T>( cb: ( progress: number ) => void ) {\n    return tap(( event: HttpEvent<T> ) => {\n      if ( event.type === HttpEventType.UploadProgress ) {\n        cb(Math.round((100 * event.loaded) / event.total));\n      }\n    });\n  }","export class HomeDataModel{\n    constructor(\n        //multiplex details\n\tpublic multiplexId: string,\n\tpublic multiplexName: string,\n\tpublic location: string,\n\t\n\t//Screen details\n\tpublic screenId: string,\n\tpublic screenName: string,\n\tpublic screenSize: number, \n\tpublic totalSeat: number, \n\tpublic showStartDate: string,\n\tpublic showEndDate: string,\n\t\n\t//Movie details\n\tpublic movieId: string,\n\tpublic movieName: string,\n\tpublic category: string,\n\tpublic casts: string,\n\tpublic producer: string,\n    public director: string,\n    public description: string,\n\tpublic length: number,\n\tpublic language: string,\n\tpublic trailer: string,\n\tpublic posterURL: string,\n\tpublic imdbRating: number,\n\tpublic userRating: number,\n\tpublic releaseDate: string\n    ){}\n}","export class LoginModel{\n    constructor(public username: string, public password: string){}\n}","export class MovieModel{\n    constructor(\n        public movieId: string,\n        public name: string,\n        public category: string,\n        public casts: string,\n        public producer: string,\n        public director: string,\n        public description: string,\n        public length: string,\n        public language: string,\n        public trailer: string,\n        public posterURL: string,\n        public imdbRating: number,\n        public userRating: number, \n        public releaseDate: string,\n        public movieAddedBy: string,\n        public isAlive: boolean,\n        public movieCreationTimeStamp: string,\n        public movieLastModifiedTimeStamp: string\n    ){}\n}","export class MultiplexModel{\n    constructor(\n        public multiplexId: string,\n        public name: string,\n\t    public location: string,\n        public screenDetailList: any,\n        public numberOfScreens: number,\n        public associatedUserId: string,\n        public isAlive: boolean,\n        public mPlexCreateTimeStamp: string,\n\t    public mPlexModifiedTimeStamp: string\n        ){}\n}","import { MovieModel } from './MovieModel';\n\nexport class ScreenModel{\n    constructor(\n        public screenId: string,\n        public multiplexId: string,\n        public screenName: string,\n        public screenSize: number,\n        public totalSeat: number,\n        public movieId: string,\n        public movieDetail: MovieModel,\n        public showStartDate: string,\n        public showEndDate: string,\n        public isScreenAlive: boolean,\n        public showAllocationDate: string,\n        public showLastModified: string\n    ){}\n}","import { MultiplexModel } from './MultiplexModel';\n\nexport class UserModel{\n    constructor(\n        public userId: String,\n        public firstName: string,\n        public lastName: string,\n        public gender: string,\n        public dob: string,\n        public age: string,\n        public email: string,\n        public mobile: string,\n        public password: string,\n        public location: string,\n        public userType: string,\n        public isAlive: string,\n        public mPlexList: MultiplexModel,\n        public profileCreationTimeStamp: string,\n        public profileLastModifiedTimeStamp: string\n    ){}\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer) { }\n\n  transform(url) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { AllocatMovieComponent } from 'src/app/components/management/multiplex/screen/allocat-movie/allocat-movie.component';\nimport { Observable } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AllocateMovieDialogService {\n\n  dialogRef: MatDialogRef<AllocatMovieComponent>; \n\n  constructor(private dialog: MatDialog) { }\n\n  public open(options) {\n    this.dialogRef = this.dialog.open(AllocatMovieComponent, {    \n      data: {\n        title: options.title,\n        message1: options.message1,\n        message2: options.message2,\n        cancelText: options.cancelText,\n        confirmText: options.confirmText\n      }\n });  \n  }\n  public confirmed(): Observable<any> {\n    return this.dialogRef.afterClosed().pipe(take(1), map(res => {\n      return res;\n    }\n  ));\n  } \n}\n","import { Injectable } from '@angular/core';\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { HomeTrailerComponent } from 'src/app/components/home/home-trailer/home-trailer.component';\nimport { Observable } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeTrailerService {\n\n  dialogRef: MatDialogRef<HomeTrailerComponent>; \n\n  constructor(private dialog: MatDialog) { }\n\n  public open(options) {\n    this.dialogRef = this.dialog.open(HomeTrailerComponent, {    \n      data: {\n        title: options.title,\n        message1: options.message1,\n        message2: options.message2,\n        cancelText: options.cancelText,\n        confirmText: options.confirmText \n      }\n });  \n  } \n  public confirmed(): Observable<any> {\n    return this.dialogRef.afterClosed().pipe(take(1), map(res => {\n      return res;\n    }\n  ));\n  } \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LoginModel } from 'src/app/models/LoginModel';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  //LOGIN_URL: string = \"http://localhost:7790/api/user\";\n  //LOGIN_URL: string = \"http://localhost:8765/MoviePlex-User-Micro/api/user\";\n  \n  //LOGIN_URL: string = \"http://localhost:8765/authenticate\";\n  LOGIN_URL: string = \"https://nidarshan.herokuapp.com/authenticate\";\n\n  constructor(private http: HttpClient) { }\n\n  doLogin(data: LoginModel){\n    //return this.http.post(this.LOGIN_URL+\"/login\",data);\n    return this.http.post(this.LOGIN_URL,data);\n  }\n  \n\n /*doLogin(data: LoginModel): Observable<boolean> {alert(\"x\");\n  return this.http.post<{token: string}>(this.LOGIN_URL, {data})\n    .pipe(\n      map(result => { alert(JSON.stringify(result));\n       // localStorage.setItem('access_token', result.token);\n        return true;\n      })\n    );\n}*/\n\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { MovieEditDialogComponent } from 'src/app/components/management/movie/movie-edit-dialog/movie-edit-dialog.component';\nimport { Observable } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\nimport { MovieModel } from 'src/app/models/MovieModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieEditDialogService {\n\n  dialogRef: MatDialogRef<MovieEditDialogComponent>; \n\n  constructor(private dialog: MatDialog) { } \n\n  public open(options) {\n    this.dialogRef = this.dialog.open(MovieEditDialogComponent, {    \n      data: {\n        title: options.title,\n        message1: options.message1,\n        message2: options.message2,\n        cancelText: options.cancelText,\n        confirmText: options.confirmText \n      }\n });  \n  }\n  public confirmed(): Observable<any> {\n    return this.dialogRef.afterClosed().pipe(take(1), map(res => {\n      return res;\n    }\n  ));\n  } \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MovieModel } from 'src/app/models/MovieModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n  \n  //MOVIE_URL:string = \"http://localhost:8765/MoviePlex-Movie-Micro/api/movie\"; \n  //MOVIE_UPLOAD_URL: string = \"http://localhost:8765/MoviePlex-Movie-Micro/api/media/uploadMultipleFiles\";  \n\n  MOVIE_URL:string = \"https://nidarshan.herokuapp.com/api/movie\"; \n  MOVIE_UPLOAD_URL: string = \"https://nidarshan.herokuapp.com/api/media/uploadMultipleFiles\";  \n\n  movieData: any[];\n\n  constructor(private http: HttpClient) { }\n\n  addMovie(movieData: MovieModel){\n    return this.http.post(this.MOVIE_URL+\"/add\", movieData);\n  }\n\n  modifyMovie(movieData){\n    return this.http.put(this.MOVIE_URL+\"/modify\",movieData);\n  }\n\n  getAllMovies(){\n    return this.http.get(this.MOVIE_URL+\"/get-all\");\n  }\n\n  public uploadPoster(formData, movieId: string) {\n \n    return this.http.post<any>(this.MOVIE_UPLOAD_URL+\"/\"+movieId+\"/save\", formData, {  \n        reportProgress: true,  \n        observe: 'events'  \n      }); \n      //return this.http.post<any>(this.MOVIE_UPLOAD_URL+\"/\"+movieId+\"/save\", formData); \n  }\n\n  setMovieData(data: any){ \n    this.movieData.push(data);\n  }\n  getMovieData(){\n    return this.movieData;\n  }\n  clearMovieData(){\n    this.movieData = [];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MultiplexModel } from 'src/app/models/MultiplexModel';\nimport { ScreenModel } from 'src/app/models/ScreenModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MultiplexService {\n\n  screenData: any[];\n  \n  //MPLEX_URL:string = \"http://localhost:8765/MoviePlex-Multiplex-Micro/api/multiplex\"; \n  //SCREEN_URL:string = \"http://localhost:8765/MoviePlex-Screen-Micro/api/screen\"; \n\n  MPLEX_URL:string = \"https://nidarshan.herokuapp.com/api/multiplex\"; \n  SCREEN_URL:string = \"https://nidarshan.herokuapp.com/api/screen\"; \n  \n\n\n  constructor(private httpClient: HttpClient) { }\n\n  addMultiplex(data: MultiplexModel){\n    return this.httpClient.post(this.MPLEX_URL+\"/add\", data);\n  }\n\n  getAllMultiplexOfUser(userId: string){\n    return this.httpClient.get(this.MPLEX_URL+\"/get/all/user/\"+userId);\n  }\n\n  getAllMultiplexScreens(multiplexId: string){\n    return this.httpClient.get(this.SCREEN_URL+\"/get/all/\"+multiplexId);\n  }\n\n  getAllMultiplexesWithScreens(){\n    return this.httpClient.get(this.MPLEX_URL+\"/get-home-page\");\n  }\n\n  addScreen(data: ScreenModel){\n    return this.httpClient.post(this.SCREEN_URL+\"/add\",data);\n  }\n\n  modifyScreen(data: ScreenModel){\n    return this.httpClient.put(this.SCREEN_URL+\"/modify\",data);\n  }\n\n  deleteScreen(screenId: string){\n    return this.httpClient.delete(this.SCREEN_URL+\"/delete/\"+screenId);\n  }\n\n  \n\n\n\n  setScreenData(data: any){ \n    this.screenData.push(data);\n  }\n  getScreenData(){\n    return this.screenData;\n  }\n  clearScreenData(){\n    this.screenData = [];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n  \n  //USER_URL = \"http://localhost:7790/api/user\";\n  //USER_URL = \"http://localhost:8765/MoviePlex-User-Micro/api/user\";\n  //USER_URL = \"http://localhost:8765\";\n  USER_URL = \"https://nidarshan.herokuapp.com\";\n  \n  constructor(private http: HttpClient) { }\n\n  registerUser(data: any){\n    return this.http.post(this.USER_URL+\"/register-user\", data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { UserAdminDialogComponent } from 'src/app/components/management/user/user-admin-dialog/user-admin-dialog.component';\nimport { Observable } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAdminDialogService {\n  constructor(private dialog: MatDialog) { }\n\n  dialogRef: MatDialogRef<UserAdminDialogComponent>;\n\n  public open(options) {\n    this.dialogRef = this.dialog.open(UserAdminDialogComponent, {    \n      data: {\n        title: options.title,\n        message1: options.message1,\n        message2: options.message2,\n        cancelText: options.cancelText,\n        confirmText: options.confirmText \n      }\n });  \n  }  \n  public confirmed(): Observable<any> {\n    return this.dialogRef.afterClosed().pipe(take(1), map(res => {\n      return res;\n    }\n  ));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\nimport { UserEditComponent } from 'src/app/components/user-edit/user-edit.component';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserEditService {\n\n  dialogRef: MatDialogRef<UserEditComponent>;\n\n  constructor(private dialog: MatDialog) { }\n\n  public open(options) {\n    this.dialogRef = this.dialog.open(UserEditComponent, {    \n      data: {\n        title: options.title,\n        message1: options.message1,\n        message2: options.message2,\n        cancelText: options.cancelText,\n        confirmText: options.confirmText\n      }\n });  \n  }\n  public confirmed(): Observable<any> {\n    return this.dialogRef.afterClosed().pipe(take(1), map(res => {\n      return res;\n    }\n  ));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { UserModel } from 'src/app/models/UserModel';\nimport { Observable } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { AuthenticationService } from '../../utilty-services/security/authentication.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  \n  //USER_URL: string = \"http://localhost:7790/api/user\";\n  //USER_URL: string = \"http://localhost:8765/MoviePlex-User-Micro/api/user\";\n  USER_URL: string = \"https://nidarshan.herokuapp.com/api/user\";\n  userdata = [];\n  userModel: UserModel;\n\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  constructor(private http: HttpClient, private auth: AuthenticationService) { }\n\n  getUserDetail(userId: string){\n    return this.http.get(this.USER_URL+\"/get/\"+userId);\n  }\n\n  doModifyUser(data:any){\n    return this.http.put(this.USER_URL+\"/modify-user\", data);\n  }\n\n /* getAllUserList(){\n    return this.http.get(this.USER_URL+\"/get-all\");\n  }*/\n\n  getAllUserList():Observable<any>{\n    return this.http.get(this.USER_URL+\"/get-all\").pipe(\n      map((res) => {\n        return res;\n      })\n    )\n  }\n\n  /*getUserProfile(id): Observable<any> {\n    let api = this.USER_URL+\"/get-all\";\n    return this.http.get(api, { headers: this.headers }).pipe(\n      map((res: Response) => {\n        return res || {}\n      }),\n      map((err)=>{\n        alert(err);\n      }\n      )\n      )\n  }*/\n\n  addUserData(data: any){\n    this.userdata.push(data);\n  }\n\n  getUserData(){\n    return this.userdata;\n  }\n\n  clearUserData(){\n    this.userdata = [];\n  }\n\n  addUserModel(data: UserModel){  \n    this.userModel = data;\n  }\n\n  getUserModel(){\n    return this.userModel;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\nimport { ConfirmMessageDialogComponent } from 'src/app/components/utility-components/dialogs/confirm-message-dialog/confirm-message-dialog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmMessageDialogService {\n\n  constructor(private dialog: MatDialog, private http: HttpClient) { }\n\n  dialogRef: MatDialogRef<ConfirmMessageDialogComponent>;\n\n  public open(options) {\n    this.dialogRef = this.dialog.open(ConfirmMessageDialogComponent, {    \n      data: {\n        title: options.title,\n        message1: options.message1,\n        message2: options.message2,\n        cancelText: options.cancelText,\n        confirmText: options.confirmText \n      }\n });  \n  }  \n  public confirmed(): Observable<any> {\n    return this.dialogRef.afterClosed().pipe(take(1), map(res => {\n      return res;\n    }\n  ));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { MessageDialogComponent } from 'src/app/components/utility-components/dialogs/message-dialog/message-dialog.component';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageDialogService {\n\n  constructor(private dialog: MatDialog) { }\n\n  dialogRef: MatDialogRef<MessageDialogComponent>;\n\n  public open(options) {\n    this.dialogRef = this.dialog.open(MessageDialogComponent, {    \n      data: {\n        title: options.title,\n        message1: options.message1,\n        message2: options.message2,\n        cancelText: options.cancelText,\n        confirmText: options.confirmText\n      }\n    });  \n  }  \n  public confirmed(): Observable<any> {\n    return this.dialogRef.afterClosed().pipe(take(1), map(res => {\n      return res;\n    }\n  ));\n  }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor{\n    constructor(private authService: AuthenticationService) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n      /*  const authToken = this.authService.getToken();\n        req = req.clone({\n            setHeaders: {\n                Authorization: \"Bearer \" + authToken\n            }\n        });\n        return next.handle(req); */\n\n        if(this.authService.isUserLoggedIn()){\n            let token = this.authService.getToken();\n            \n            req = req.clone({\n                setHeaders:{\n                    Authorization: \"Bearer \" + token\n                }\n            });\n        }\n        return next.handle(req);\n    }\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthenticationService } from '../../authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginCheckAuthGuradService implements CanActivate{\n\n  constructor(private authService: AuthenticationService, private route: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean{\n    //implement guard logic\n    //Check if user is logged in\n    if(this.authService.isUserLoggedIn()){\n      return true;\n    }\n    else{\n      //should navigate to login page\n      this.route.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LoginService } from '../../http-services/login-service/login.service';\nimport { LoginModel } from 'src/app/models/LoginModel';\nimport { Router } from '@angular/router';\nimport { MessageDialogService } from '../dialog/message-dialog.service';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n // endpoint: string = \"http://localhost:8765\";\n // headers = new HttpHeaders().set('Content-Type', 'application/json');\n // currentUser = {};\n  user: any;\n\n  constructor(private loginService: LoginService, private http: HttpClient, private router: Router, private dialogService: MessageDialogService) { }\n\n  /*doLogin(email: string, password: string){this.signIn(email, password);}\n  // Sign-in\n  signIn(email: string, password: string) {\n\n    let loginModel: LoginModel = new LoginModel(email, password);\n     \n    return this.http.post<any>(`${this.endpoint}/authenticate`, loginModel)\n      .subscribe((res: any) => {\n        console.log(res);\n        console.log(res.token);\n        localStorage.setItem('access_token', res.token)\n        //this.getUserProfile(res._id).subscribe((res) => {\n          this.currentUser = res;\n         // this.router.navigate(['user-profile/' + res.msg._id]);\n       // })\n      })\n\n    //let authToken = \"Bearer \"+ + window.btoa(loginModel.username + \":\" + loginModel.password);\n   // let authToken = window.btoa(loginModel.username + \":\" + loginModel.password);\n   // let headers = new HttpHeaders();\n   // headers.append('Content-Type', 'application/json');\n   // console.log(authToken);\n\n   // let headers = new HttpHeaders({\n   //   Authorization: authToken\n   // });\n   \n   \n   \n   /*return this.http.post(`${this.endpoint}/authenticate`, loginModel, {headers:headers}).subscribe((res) => {\n      var payload = res; \n      console.log(payload); \n    });\n    \n\n\n\n   return this.http.post(`${this.endpoint}/authenticate`, loginModel,{responseType:'text', observe: 'response'})\n   .subscribe(\n     (res) => {//console.log(\"res = \"+JSON.stringify(res)); \n     //console.log(res.headers.get('X-Token'));\n     let output1 = res;\n        console.log(JSON.stringify(output1.body));\n        console.log(JSON.stringify(output1.headers.get('Authorization')));\n     }\n   );\n*/\n\n    /*.pipe(\n      map(\n        (success) =>{alert(success);\n          console.log(\"success data = \"+success);\n          return true;\n        }\n      ),\n      map(\n        (err) => {\n          console.log(err);\n          return true;\n        }\n      ) \n    );*/\n  //}\n  \n  doLogin(email: string, password: string){\n    let loginModel: LoginModel = new LoginModel(email, password);\n    this.loginService.doLogin(loginModel).subscribe(\n      (success) => {\n        this.user = success;  \n      \n        sessionStorage.setItem(\"userId\", this.user.userId);\n        sessionStorage.setItem(\"userName\", this.user.firstName+\" \"+this.user.lastName); \n        sessionStorage.setItem(\"userType\", this.user.userType);\n        sessionStorage.setItem(\"token\", this.user.token);\n \n         \n        this.router.navigate(['/home']);\n      },\n      (err) => { \n        let options = {\n          title: 'MoviePlex Login',\n          message1: err.error.message,\n          message2: \"Kindly login with valid Email Id & Password.\",\n          cancelText: 'Ok',\n          confirmText: 'Ok'\n        };\n   \n        this.dialogService.open(options);\n      }\n    );\n  }\n  doLogOut(){\n    sessionStorage.clear();\n  }\n\n  isUserLoggedIn(): boolean{\n    //If userId exist, means user is logged in\n    let token = sessionStorage.getItem(\"token\");\n     \n    if(token == null){\n      return false;\n    }\n    else{\n      return true;\n    } \n  }\n  isUserAdmin(): boolean{\n    let userType = sessionStorage.getItem(\"userType\"); \n    if(userType == \"ADMIN\"){  \n      return true;\n    }\n    else{\n      return false;\n    } \n  }\n  isUserSuperUser(): boolean{\n    let userType = sessionStorage.getItem(\"userType\"); \n    if(userType == \"SUPER_USER\"){ \n      return true;\n    }\n    else{\n      return false;\n    } \n  }\n\n  getToken() {\n    return sessionStorage.getItem(\"token\");\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PingService {\n\n  /**\n   * As Heroku server sleeps in every 30 minutes. \n   * So that API goes down.\n   * To resolve this need to warm every microservices in withing 30 minutes.\n   */\n  /*USER_URL    = \"https://nidarshan.herokuapp.com/MoviePlex-User-Micro/api/user/message\";\n  SCREEN_URL  = \"https://nidarshan.herokuapp.com/MoviePlex-Screen-Micro/api/screen/message\";\n  MPLEX_URL   = \"https://nidarshan.herokuapp.com/MoviePlex-Multiplex-Micro/api/multiplex/message\";\n  MOVIE_URL   = \"https://nidarshan.herokuapp.com/MoviePlex-Movie-Micro/api/movie/message\";\n\n  constructor(private http: HttpClient) { }\n\n  getUserUp(){\n    return this.http.get(this.USER_URL);\n  }\n\n  getScreenUp(){\n    return this.http.get(this.SCREEN_URL);\n  }\n\n  getMPlexUp(){\n    return this.http.get(this.MPLEX_URL);\n  }\n\n  getMovieUp(){\n    return this.http.get(this.MOVIE_URL);\n  }*/\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}